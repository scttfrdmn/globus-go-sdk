name: API Stability Check

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'pkg/**/*.go'
      - 'go.mod'
      - 'go.sum'

jobs:
  api-compatibility-check:
    name: Check API Compatibility
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Get base branch
        id: base-branch
        run: |
          BASE_SHA=$(git merge-base origin/main HEAD)
          echo "base_sha=$BASE_SHA" >> $GITHUB_OUTPUT
          echo "Base SHA: $BASE_SHA"

      - name: Checkout base code
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.base-branch.outputs.base_sha }}
          path: base-code

      - name: Generate base API signature
        run: |
          cd base-code
          go build -o ./bin/apigen ./cmd/apigen
          ./bin/apigen -dir ./pkg -o ../api-base.json

      - name: Checkout current code
        uses: actions/checkout@v3
        with:
          clean: false

      - name: Generate current API signature
        run: |
          go build -o ./bin/apigen ./cmd/apigen
          go build -o ./bin/apicompare ./cmd/apicompare
          ./bin/apigen -dir ./pkg -o api-current.json

      - name: Compare API changes
        id: compare
        run: |
          LEVEL="minor"  # Default to minor version check
          if [[ "${{ github.event.pull_request.title }}" == *"BREAKING CHANGE"* ]]; then
            LEVEL="major"
            echo "Major version change detected in PR title, allowing breaking changes"
          fi
          
          COMPARE_OUTPUT=$(./bin/apicompare -old api-base.json -new api-current.json -level $LEVEL)
          COMPARE_STATUS=$?
          
          echo "$COMPARE_OUTPUT"
          
          if [ $COMPARE_STATUS -ne 0 ]; then
            echo "::error::API compatibility check failed! Breaking changes detected!"
            echo "changes<<EOF" >> $GITHUB_OUTPUT
            echo "$COMPARE_OUTPUT" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "API compatibility check passed!"
          fi

      - name: Generate deprecation report
        run: |
          go build -o ./bin/depreport ./cmd/depreport
          ./bin/depreport -o deprecation-report.md
          
          echo "Deprecation Report:"
          cat deprecation-report.md

      - name: Upload API signatures as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: api-signatures
          path: |
            api-base.json
            api-current.json
            deprecation-report.md

      - name: Comment on PR if API changes detected
        if: ${{ failure() && steps.compare.outputs.changes != '' }}
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const changes = `${{ steps.compare.outputs.changes }}`;
            const body = `## ⚠️ API Compatibility Warning\n\nPotential breaking changes detected in this PR:\n\n\`\`\`\n${changes}\n\`\`\`\n\nIf these changes are intentional breaking changes, please:\n1. Include "BREAKING CHANGE" in the PR title\n2. Document the changes in CHANGELOG.md\n3. Update the appropriate version number following semantic versioning`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  contract-test-verification:
    name: Verify Interface Contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21

      - name: Run contract tests
        run: |
          go test -v ./pkg/core/contracts/...
          
          # As more contract tests are added, add them here:
          # go test -v ./pkg/services/auth/contracts/...
          # go test -v ./pkg/services/transfer/contracts/...
          # etc.