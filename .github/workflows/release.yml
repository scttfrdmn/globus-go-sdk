name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  goreleaser:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v5
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-cli:
    name: Build CLI Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        include:
          - os: windows
            ext: .exe
        exclude:
          - os: windows
            arch: arm64
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true

    - name: Get release tag
      id: get_tag
      run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Build CLI
      env:
        GOOS: ${{ matrix.os }}
        GOARCH: ${{ matrix.arch }}
      run: |
        echo "Building CLI for ${{ matrix.os }}/${{ matrix.arch }}"
        go build -v -o globus-cli-${{ env.TAG }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} ./cmd/globus-cli

    - name: Upload CLI binary
      uses: actions/upload-artifact@v4
      with:
        name: globus-cli-${{ env.TAG }}-${{ matrix.os }}-${{ matrix.arch }}
        path: globus-cli-${{ env.TAG }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
        retention-days: 30

  register-go-module:
    name: Register Go Module
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true

    - name: Register module with Go proxy
      run: GOPROXY=proxy.golang.org go list -m github.com/scttfrdmn/globus-go-sdk@${GITHUB_REF#refs/tags/}

  update-docs:
    name: Update Documentation
    runs-on: ubuntu-latest
    needs: [goreleaser]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true

    - name: Generate latest API docs
      run: |
        go install golang.org/x/pkgsite/cmd/pkgsite@latest
        mkdir -p api-docs
        pkgsite -open=false -dir=api-docs -templates=false ./pkg
        echo "API documentation generated"

    - name: Create Release Notes
      run: |
        VERSION=${GITHUB_REF#refs/tags/}
        echo "# Release Notes for $VERSION" > RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Changes" >> RELEASE_NOTES.md
        git log --pretty=format:"- %s" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        
    - name: Upload Release Notes
      uses: actions/upload-artifact@v4
      with:
        name: release-notes
        path: RELEASE_NOTES.md
        retention-days: 30