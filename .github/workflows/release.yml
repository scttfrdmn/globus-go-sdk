name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Run tests
        run: go test -v ./...
      
      - name: Generate changelog
        id: changelog
        run: |
          # Find the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          if [ -z "$PREV_TAG" ]; then
            # If no previous tag exists, list all commits
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            # List commits since previous tag
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s (%h)" ${PREV_TAG}..HEAD >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
      
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            ## Changelog
            ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: false
          
  goreleaser:
    name: Generate documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
      
      - name: Run godoc
        run: |
          go install golang.org/x/tools/cmd/godoc@latest
          mkdir -p ./docs
          # Generate documentation using godoc
          $(go env GOPATH)/bin/godoc -html -url /pkg/github.com/yourusername/globus-go-sdk/ > ./docs/index.html
          # Generate documentation for subpackages
          for dir in pkg pkg/core pkg/services/auth pkg/services/groups pkg/services/transfer; do
            mkdir -p ./docs/$dir
            $(go env GOPATH)/bin/godoc -html -url /pkg/github.com/yourusername/globus-go-sdk/$dir/ > ./docs/$dir/index.html
          done
      
      - name: Upload documentation
        uses: actions/upload-artifact@v3
        with:
          name: godoc
          path: ./docs/