{
  "version": "v0.9.17",
  "signatures": [
    {
      "package": "benchmark",
      "name": "MemoryStats",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Alloc": "uint64",
          "GCCPUFraction": "float64",
          "HeapAlloc": "uint64",
          "HeapSys": "uint64",
          "NumGC": "uint32",
          "Sys": "uint64",
          "Time": "time.Time",
          "TotalAlloc": "uint64"
        },
        "is_exported": true,
        "file": "pkg/benchmark/memory.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "MemorySampler",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/benchmark/memory.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "NewMemorySampler",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [
          "*MemorySampler"
        ],
        "is_exported": true,
        "file": "pkg/benchmark/memory.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "Start",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*MemorySampler",
        "is_exported": true,
        "file": "pkg/benchmark/memory.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "Stop",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*MemorySampler",
        "is_exported": true,
        "file": "pkg/benchmark/memory.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "GetSamples",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "[]MemoryStats"
        ],
        "receiver": "*MemorySampler",
        "is_exported": true,
        "file": "pkg/benchmark/memory.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "GetPeakMemory",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "float64"
        ],
        "receiver": "*MemorySampler",
        "is_exported": true,
        "file": "pkg/benchmark/memory.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "GetSummary",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*MemorySampler",
        "is_exported": true,
        "file": "pkg/benchmark/memory.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "PrintSummary",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*MemorySampler",
        "is_exported": true,
        "file": "pkg/benchmark/memory.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "BenchmarkResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CPUUsagePercent": "float64",
          "ElapsedTime": "time.Duration",
          "FileCount": "int",
          "FileSizeMB": "float64",
          "MemoryPeakMB": "float64",
          "SuccessRate": "float64",
          "TaskID": "string",
          "TotalSizeMB": "float64",
          "TransferSpeedMBs": "float64"
        },
        "is_exported": true,
        "file": "pkg/benchmark/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "TransferBenchmarkConfig",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DeleteAfter": "bool",
          "DestEndpoint": "string",
          "DestPath": "string",
          "FileCount": "int",
          "FileSizeMB": "float64",
          "GenerateTestData": "bool",
          "Parallelism": "int",
          "SourceEndpoint": "string",
          "SourcePath": "string",
          "UseRecursive": "bool"
        },
        "is_exported": true,
        "file": "pkg/benchmark/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "DefaultTransferBenchmarkConfig",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*TransferBenchmarkConfig"
        ],
        "is_exported": true,
        "file": "pkg/benchmark/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "benchmark",
      "name": "BenchmarkTransfer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*transfer.Client",
          "*TransferBenchmarkConfig",
          "io.Writer"
        ],
        "results": [
          "*BenchmarkResult",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/benchmark/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "BasicAuthorizer",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/auth/auth_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "NewBasicAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*BasicAuthorizer"
        ],
        "is_exported": true,
        "file": "pkg/core/auth/auth_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "GetAuthorizationHeader",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*BasicAuthorizer",
        "is_exported": true,
        "file": "pkg/core/auth/auth_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "IsValid",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*BasicAuthorizer",
        "is_exported": true,
        "file": "pkg/core/auth/auth_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "GetToken",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*BasicAuthorizer",
        "is_exported": true,
        "file": "pkg/core/auth/auth_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "Authorizer",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "GetAuthorizationHeader": {
            "params": [
              "...context.Context"
            ],
            "results": [
              "string",
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/auth/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "ErrTokenNotFound",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "ErrStorageCorrupt",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "TokenInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AccessToken": "string",
          "ExpiresAt": "time.Time",
          "RefreshToken": "string",
          "ResourceID": "string",
          "Scopes": "[]string"
        },
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "IsValid",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "TokenInfo",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "CanRefresh",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "TokenInfo",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "TokenStorage",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "DeleteToken": {
            "params": [
              "context.Context",
              "string"
            ],
            "results": [
              "error"
            ]
          },
          "GetToken": {
            "params": [
              "context.Context",
              "string"
            ],
            "results": [
              "TokenInfo",
              "error"
            ]
          },
          "ListTokens": {
            "params": [
              "context.Context"
            ],
            "results": [
              "[]string",
              "error"
            ]
          },
          "StoreToken": {
            "params": [
              "context.Context",
              "string",
              "TokenInfo"
            ],
            "results": [
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "MemoryTokenStorage",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "NewMemoryTokenStorage",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*MemoryTokenStorage"
        ],
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "StoreToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "TokenInfo"
        ],
        "results": [
          "error"
        ],
        "receiver": "*MemoryTokenStorage",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "GetToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "TokenInfo",
          "error"
        ],
        "receiver": "*MemoryTokenStorage",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "DeleteToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*MemoryTokenStorage",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "ListTokens",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "[]string",
          "error"
        ],
        "receiver": "*MemoryTokenStorage",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "FileTokenStorage",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "NewFileTokenStorage",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*FileTokenStorage",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "StoreToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "TokenInfo"
        ],
        "results": [
          "error"
        ],
        "receiver": "*FileTokenStorage",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "GetToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "TokenInfo",
          "error"
        ],
        "receiver": "*FileTokenStorage",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "DeleteToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*FileTokenStorage",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "ListTokens",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "[]string",
          "error"
        ],
        "receiver": "*FileTokenStorage",
        "is_exported": true,
        "file": "pkg/core/auth/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "RefreshFunc",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/core/auth/token_manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "TokenManager",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "RefreshFunc": "RefreshFunc",
          "RefreshThreshold": "time.Duration",
          "Storage": "TokenStorage"
        },
        "is_exported": true,
        "file": "pkg/core/auth/token_manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "NewTokenManager",
      "type": "func",
      "details": {
        "params": [
          "TokenStorage",
          "RefreshFunc"
        ],
        "results": [
          "*TokenManager"
        ],
        "is_exported": true,
        "file": "pkg/core/auth/token_manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "GetToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "TokenInfo",
          "error"
        ],
        "receiver": "*TokenManager",
        "is_exported": true,
        "file": "pkg/core/auth/token_manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "StoreToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "TokenInfo"
        ],
        "results": [
          "error"
        ],
        "receiver": "*TokenManager",
        "is_exported": true,
        "file": "pkg/core/auth/token_manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "RefreshToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "TokenInfo",
          "error"
        ],
        "receiver": "*TokenManager",
        "is_exported": true,
        "file": "pkg/core/auth/token_manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "SetRefreshThreshold",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [],
        "receiver": "*TokenManager",
        "is_exported": true,
        "file": "pkg/core/auth/token_manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/auth",
      "name": "StartBackgroundRefresh",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [
          "func"
        ],
        "receiver": "*TokenManager",
        "is_exported": true,
        "file": "pkg/core/auth/token_manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "CoreAuthorizer",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Authorizer": "Authorizer"
        },
        "is_exported": true,
        "file": "pkg/core/authorizers/adapter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "NewCoreAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "Authorizer"
        ],
        "results": [
          "auth.Authorizer"
        ],
        "is_exported": true,
        "file": "pkg/core/authorizers/adapter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "GetAuthorizationHeader",
      "type": "func",
      "details": {
        "params": [
          "...context.Context"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*CoreAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/adapter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "ToCore",
      "type": "func",
      "details": {
        "params": [
          "Authorizer"
        ],
        "results": [
          "auth.Authorizer"
        ],
        "is_exported": true,
        "file": "pkg/core/authorizers/adapter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "NullCoreAuthorizer",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "auth.Authorizer"
        ],
        "is_exported": true,
        "file": "pkg/core/authorizers/adapter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "StaticTokenCoreAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "auth.Authorizer"
        ],
        "is_exported": true,
        "file": "pkg/core/authorizers/adapter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "Authorizer",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "GetAuthorizationHeader": {
            "params": [
              "context.Context"
            ],
            "results": [
              "string",
              "error"
            ]
          },
          "HandleMissingAuthorization": {
            "params": [
              "context.Context"
            ],
            "results": [
              "bool"
            ]
          },
          "IsExpired": {
            "params": [],
            "results": [
              "bool"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "NullAuthorizer",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "GetAuthorizationHeader",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*NullAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "HandleMissingAuthorization",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "bool"
        ],
        "receiver": "*NullAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "IsExpired",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*NullAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "StaticTokenAuthorizer",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Token": "string"
        },
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "NewStaticTokenAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*StaticTokenAuthorizer"
        ],
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "GetAuthorizationHeader",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*StaticTokenAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "HandleMissingAuthorization",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "bool"
        ],
        "receiver": "*StaticTokenAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "IsExpired",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*StaticTokenAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "RefreshableTokenAuthorizer",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AccessToken": "string",
          "ExpiresAt": "time.Time",
          "RefreshFunc": "func",
          "RefreshToken": "string"
        },
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "NewRefreshableTokenAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string",
          "int",
          "func"
        ],
        "results": [
          "*RefreshableTokenAuthorizer"
        ],
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "GetAuthorizationHeader",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*RefreshableTokenAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "HandleMissingAuthorization",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "bool"
        ],
        "receiver": "*RefreshableTokenAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "IsExpired",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*RefreshableTokenAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "ClientCredentialsAuthorizer",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AccessToken": "string",
          "AuthFunc": "func",
          "ClientID": "string",
          "ClientSecret": "string",
          "ExpiresAt": "time.Time",
          "Scopes": "[]string"
        },
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "NewClientCredentialsAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string",
          "[]string",
          "func"
        ],
        "results": [
          "*ClientCredentialsAuthorizer"
        ],
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "GetAuthorizationHeader",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*ClientCredentialsAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "HandleMissingAuthorization",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "bool"
        ],
        "receiver": "*ClientCredentialsAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/authorizers",
      "name": "IsExpired",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*ClientCredentialsAuthorizer",
        "is_exported": true,
        "file": "pkg/core/authorizers/authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Client",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Authorizer": "auth.Authorizer",
          "BaseURL": "string",
          "Debug": "bool",
          "HTTPClient": "*http.Client",
          "Logger": "interfaces.Logger",
          "RateLimiter": "ratelimit.RateLimiter",
          "Trace": "bool",
          "Transport": "interfaces.Transport",
          "UserAgent": "string",
          "VersionCheck": "*VersionCheck"
        },
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "NewClient",
      "type": "func",
      "details": {
        "params": [
          "...ClientOption"
        ],
        "results": [
          "*Client"
        ],
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "ClientOption",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "WithHTTPClient",
      "type": "func",
      "details": {
        "params": [
          "*http.Client"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "WithBaseURL",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "WithAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "auth.Authorizer"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "WithRateLimiter",
      "type": "func",
      "details": {
        "params": [
          "ratelimit.RateLimiter"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "WithHTTPDebugging",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "WithHTTPTracing",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "WithVersionCheck",
      "type": "func",
      "details": {
        "params": [
          "*VersionCheck"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Do",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*http.Request"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "GetHTTPClient",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*http.Client"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "GetBaseURL",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "GetUserAgent",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "GetLogger",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "interfaces.Logger"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/core/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/config",
      "name": "WithAPIVersionCheck",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "*Config"
        ],
        "receiver": "*Config",
        "is_exported": true,
        "file": "pkg/core/config/api_version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/config",
      "name": "WithCustomAPIVersion",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string"
        ],
        "results": [
          "*Config"
        ],
        "receiver": "*Config",
        "is_exported": true,
        "file": "pkg/core/config/api_version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/config",
      "name": "Config",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BaseURL": "string",
          "CustomTransport": "interfaces.Transport",
          "Debug": "bool",
          "HTTPClient": "*http.Client",
          "LogLevel": "core.LogLevel",
          "RetryMax": "int",
          "RetryWaitMax": "time.Duration",
          "RetryWaitMin": "time.Duration",
          "Timeout": "time.Duration",
          "Trace": "bool",
          "UserAgent": "string",
          "VersionCheck": "*core.VersionCheck"
        },
        "is_exported": true,
        "file": "pkg/core/config/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/config",
      "name": "DefaultConfig",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*Config"
        ],
        "is_exported": true,
        "file": "pkg/core/config/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/config",
      "name": "FromEnvironment",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*Config"
        ],
        "is_exported": true,
        "file": "pkg/core/config/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/config",
      "name": "ApplyToClient",
      "type": "func",
      "details": {
        "params": [
          "*core.Client"
        ],
        "results": [],
        "receiver": "*Config",
        "is_exported": true,
        "file": "pkg/core/config/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/config",
      "name": "GetVersionCheck",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*core.VersionCheck"
        ],
        "receiver": "*Config",
        "is_exported": true,
        "file": "pkg/core/config/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/config",
      "name": "SetVersionCheck",
      "type": "func",
      "details": {
        "params": [
          "*core.VersionCheck"
        ],
        "results": [],
        "receiver": "*Config",
        "is_exported": true,
        "file": "pkg/core/config/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/config",
      "name": "ConfigAccessor",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "ApplyToClient": {
            "params": [
              "*core.Client"
            ],
            "results": []
          },
          "GetVersionCheck": {
            "params": [],
            "results": [
              "*core.VersionCheck"
            ]
          },
          "SetVersionCheck": {
            "params": [
              "*core.VersionCheck"
            ],
            "results": []
          },
          "WithAPIVersionCheck": {
            "params": [
              "bool"
            ],
            "results": [
              "*Config"
            ]
          },
          "WithCustomAPIVersion": {
            "params": [
              "string",
              "string"
            ],
            "results": [
              "*Config"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/config/config_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "SetConnectionPoolManager",
      "type": "func",
      "details": {
        "params": [
          "interfaces.ConnectionPoolManager"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "EnableDefaultConnectionPool",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "GetConnectionPool",
      "type": "func",
      "details": {
        "params": [
          "string",
          "interfaces.ConnectionPoolConfig"
        ],
        "results": [
          "interfaces.ConnectionPool"
        ],
        "is_exported": true,
        "file": "pkg/core/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "GetHTTPClientForService",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*http.Client"
        ],
        "is_exported": true,
        "file": "pkg/core/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "VerifyAuthorizerContract",
      "type": "func",
      "details": {
        "params": [
          "*testing.T",
          "interfaces.Authorizer"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/contracts/auth_contract.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "VerifyTokenManagerContract",
      "type": "func",
      "details": {
        "params": [
          "*testing.T",
          "interfaces.TokenManager"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/contracts/auth_contract.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "VerifyClientContract",
      "type": "func",
      "details": {
        "params": [
          "*testing.T",
          "interfaces.ClientInterface"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/contracts/client_contract.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "VerifyAllContracts",
      "type": "func",
      "details": {
        "params": [
          "*testing.T",
          "map[string]interface{}"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/contracts/contracts.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "NewConnectionPoolManagerContractPair",
      "type": "func",
      "details": {
        "params": [
          "interfaces.ConnectionPoolManager",
          "func"
        ],
        "results": [
          "contractTestPair"
        ],
        "is_exported": true,
        "file": "pkg/core/contracts/contracts.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "VerifyInterface",
      "type": "func",
      "details": {
        "params": [
          "interface{}",
          "interface{}"
        ],
        "results": [
          "error"
        ],
        "is_exported": true,
        "file": "pkg/core/contracts/contracts.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "VerifyLoggerContract",
      "type": "func",
      "details": {
        "params": [
          "*testing.T",
          "interfaces.Logger"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/contracts/logger_contract.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "MockLogger",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DebugMessages": "[]string",
          "ErrorMessages": "[]string",
          "InfoMessages": "[]string",
          "WarnMessages": "[]string"
        },
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "NewMockLogger",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*MockLogger"
        ],
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Debug",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*MockLogger",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Info",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*MockLogger",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Warn",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*MockLogger",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*MockLogger",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "MockClient",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BaseURL": "string",
          "HTTPClient": "*http.Client",
          "Logger": "interfaces.Logger",
          "ResponseFunc": "func",
          "UserAgent": "string"
        },
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "NewMockClient",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*MockClient"
        ],
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Do",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*http.Request"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*MockClient",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetHTTPClient",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*http.Client"
        ],
        "receiver": "*MockClient",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetBaseURL",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*MockClient",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetUserAgent",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*MockClient",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetLogger",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "interfaces.Logger"
        ],
        "receiver": "*MockClient",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "MockTransport",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BaseURL": "string",
          "Logger": "interfaces.Logger",
          "ResponseFunc": "func"
        },
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "NewMockTransport",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*MockTransport"
        ],
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Request",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "interface{}",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*MockTransport",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Get",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*MockTransport",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Post",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "interface{}",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*MockTransport",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Put",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "interface{}",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*MockTransport",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Delete",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*MockTransport",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Patch",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "interface{}",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*MockTransport",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "RoundTrip",
      "type": "func",
      "details": {
        "params": [
          "*http.Request"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*MockTransport",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "MockAuthorizer",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Logger": "interfaces.Logger",
          "Token": "string",
          "Valid": "bool"
        },
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "NewMockAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "string",
          "bool"
        ],
        "results": [
          "*MockAuthorizer"
        ],
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetAuthorizationHeader",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*MockAuthorizer",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "IsValid",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*MockAuthorizer",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetToken",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*MockAuthorizer",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "MockTokenManager",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Logger": "interfaces.Logger",
          "RefreshOK": "bool",
          "RevokeOK": "bool",
          "Token": "string",
          "Valid": "bool"
        },
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "NewMockTokenManager",
      "type": "func",
      "details": {
        "params": [
          "string",
          "bool"
        ],
        "results": [
          "*MockTokenManager"
        ],
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*MockTokenManager",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "RefreshToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "error"
        ],
        "receiver": "*MockTokenManager",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "RevokeToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "error"
        ],
        "receiver": "*MockTokenManager",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "IsValid",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*MockTokenManager",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "MockConnectionPool",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*http.Client",
          "Logger": "interfaces.Logger",
          "Timeout": "time.Duration",
          "Transport": "*http.Transport"
        },
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "NewMockConnectionPool",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*MockConnectionPool"
        ],
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetClient",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*http.Client"
        ],
        "receiver": "*MockConnectionPool",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "SetTimeout",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [],
        "receiver": "*MockConnectionPool",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "CloseIdleConnections",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*MockConnectionPool",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetTransport",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*http.Transport"
        ],
        "receiver": "*MockConnectionPool",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "MockConnectionPoolConfig",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "IdleConnTimeoutVal": "time.Duration",
          "MaxConnsPerHostVal": "int",
          "MaxIdleConnsPerHostVal": "int",
          "MaxIdleConnsVal": "int"
        },
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "NewMockConnectionPoolConfig",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*MockConnectionPoolConfig"
        ],
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetMaxIdleConnsPerHost",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*MockConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetMaxIdleConns",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*MockConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetMaxConnsPerHost",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*MockConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetIdleConnTimeout",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "time.Duration"
        ],
        "receiver": "*MockConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "MockConnectionPoolManager",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Logger": "interfaces.Logger",
          "Pools": "map[string]interfaces.ConnectionPool"
        },
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "NewMockConnectionPoolManager",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*MockConnectionPoolManager"
        ],
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetPool",
      "type": "func",
      "details": {
        "params": [
          "string",
          "interfaces.ConnectionPoolConfig"
        ],
        "results": [
          "interfaces.ConnectionPool"
        ],
        "receiver": "*MockConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "CloseAllIdleConnections",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*MockConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetAllStats",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*MockConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "MockPooledHTTPClient",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Pool": "interfaces.ConnectionPool"
        },
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "NewMockPooledHTTPClient",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*MockPooledHTTPClient"
        ],
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "GetPool",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "interfaces.ConnectionPool"
        ],
        "receiver": "*MockPooledHTTPClient",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "Do",
      "type": "func",
      "details": {
        "params": [
          "*http.Request"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*MockPooledHTTPClient",
        "is_exported": true,
        "file": "pkg/core/contracts/mocks.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "VerifyConnectionPoolContract",
      "type": "func",
      "details": {
        "params": [
          "*testing.T",
          "interfaces.ConnectionPool"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/contracts/pool_contract.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "VerifyConnectionPoolConfigContract",
      "type": "func",
      "details": {
        "params": [
          "*testing.T",
          "interfaces.ConnectionPoolConfig"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/contracts/pool_contract.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "VerifyConnectionPoolManagerContract",
      "type": "func",
      "details": {
        "params": [
          "*testing.T",
          "interfaces.ConnectionPoolManager",
          "interface{}"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/contracts/pool_contract.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "VerifyPooledHTTPClientContract",
      "type": "func",
      "details": {
        "params": [
          "*testing.T",
          "interfaces.PooledHTTPClient"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/contracts/pool_contract.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/contracts",
      "name": "VerifyTransportContract",
      "type": "func",
      "details": {
        "params": [
          "*testing.T",
          "interfaces.Transport"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/contracts/transport_contract.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "WithDebugMode",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/deprecated_example.go",
        "is_deprecated": true
      }
    },
    {
      "package": "core",
      "name": "DoWithRetry",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*http.Request",
          "int"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/core/deprecated_example.go",
        "is_deprecated": true
      }
    },
    {
      "package": "core/deprecation",
      "name": "DisableWarnings",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/deprecation/deprecation.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/deprecation",
      "name": "WarnOnce",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/deprecation/deprecation.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/deprecation",
      "name": "FeatureInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DeprecatedIn": "string",
          "MigrationGuidance": "string",
          "Name": "string",
          "RemovalIn": "string"
        },
        "is_exported": true,
        "file": "pkg/core/deprecation/deprecation.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/deprecation",
      "name": "LogWarning",
      "type": "func",
      "details": {
        "params": [
          "interfaces.Logger",
          "string",
          "string",
          "string",
          "string"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/deprecation/deprecation.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/deprecation",
      "name": "CreateFeatureInfo",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string",
          "string",
          "string"
        ],
        "results": [
          "FeatureInfo"
        ],
        "is_exported": true,
        "file": "pkg/core/deprecation/deprecation.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/deprecation",
      "name": "LogFeatureWarning",
      "type": "func",
      "details": {
        "params": [
          "interfaces.Logger",
          "FeatureInfo"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/deprecation/deprecation.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Error",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Code": "string",
          "Field": "string",
          "Message": "string",
          "RawBody": "[]byte",
          "Resource": "string",
          "StatusCode": "int"
        },
        "is_exported": true,
        "file": "pkg/core/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*Error",
        "is_exported": true,
        "file": "pkg/core/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "ErrorResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Errors": "[]Error"
        },
        "is_exported": true,
        "file": "pkg/core/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "NewAPIError",
      "type": "func",
      "details": {
        "params": [
          "*http.Response"
        ],
        "results": [
          "error"
        ],
        "is_exported": true,
        "file": "pkg/core/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "IsUnauthorized",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/core/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "IsNotFound",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/core/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "IsForbidden",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/core/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "ConnectionPoolConfig",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DisableKeepAlives": "bool",
          "ExpectContinueTimeout": "time.Duration",
          "IdleConnTimeout": "time.Duration",
          "MaxConnsPerHost": "int",
          "MaxIdleConns": "int",
          "MaxIdleConnsPerHost": "int",
          "ResponseHeaderTimeout": "time.Duration",
          "TLSClientConfig": "*tls.Config",
          "TLSHandshakeTimeout": "time.Duration"
        },
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "DefaultConnectionPoolConfig",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*ConnectionPoolConfig"
        ],
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetMaxIdleConnsPerHost",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*ConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetMaxIdleConns",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*ConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetMaxConnsPerHost",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*ConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetIdleConnTimeout",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "time.Duration"
        ],
        "receiver": "*ConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "ConnectionPool",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*http.Client",
          "Config": "*ConnectionPoolConfig",
          "Transport": "*http.Transport"
        },
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "NewConnectionPool",
      "type": "func",
      "details": {
        "params": [
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*ConnectionPool"
        ],
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetClient",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*http.Client"
        ],
        "receiver": "*ConnectionPool",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "SetTimeout",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [],
        "receiver": "*ConnectionPool",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "CloseIdleConnections",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*ConnectionPool",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetTransport",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*http.Transport"
        ],
        "receiver": "*ConnectionPool",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetStats",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "ConnectionPoolStats"
        ],
        "receiver": "*ConnectionPool",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "ConnectionPoolStats",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ActiveByHost": "map[string]int",
          "ActiveHosts": "int",
          "Config": "ConnectionPoolConfig",
          "TotalActive": "int"
        },
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "ConnectionPoolManager",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "NewConnectionPoolManager",
      "type": "func",
      "details": {
        "params": [
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*ConnectionPoolManager"
        ],
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetPool",
      "type": "func",
      "details": {
        "params": [
          "string",
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*ConnectionPool"
        ],
        "receiver": "*ConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "CloseAllIdleConnections",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*ConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetAllStats",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]ConnectionPoolStats"
        ],
        "receiver": "*ConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GlobalHttpPoolManager",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetServicePool",
      "type": "func",
      "details": {
        "params": [
          "string",
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*ConnectionPool"
        ],
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetHTTPClientForService",
      "type": "func",
      "details": {
        "params": [
          "string",
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*http.Client"
        ],
        "is_exported": true,
        "file": "pkg/core/http/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "HttpConnectionPool",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "embedded": "*ConnectionPool"
        },
        "is_exported": true,
        "file": "pkg/core/http/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "NewHttpConnectionPool",
      "type": "func",
      "details": {
        "params": [
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*HttpConnectionPool"
        ],
        "is_exported": true,
        "file": "pkg/core/http/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "HttpConnectionPoolManager",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "embedded": "*ConnectionPoolManager"
        },
        "is_exported": true,
        "file": "pkg/core/http/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "NewHttpConnectionPoolManager",
      "type": "func",
      "details": {
        "params": [
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*HttpConnectionPoolManager"
        ],
        "is_exported": true,
        "file": "pkg/core/http/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetPool",
      "type": "func",
      "details": {
        "params": [
          "string",
          "interfaces.ConnectionPoolConfig"
        ],
        "results": [
          "interfaces.ConnectionPool"
        ],
        "receiver": "*HttpConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/http/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "CloseAllIdleConnections",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*HttpConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/http/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/http",
      "name": "GetAllStats",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*HttpConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/http/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/interfaces",
      "name": "Authorizer",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "GetAuthorizationHeader": {
            "params": [
              "context.Context"
            ],
            "results": [
              "string",
              "error"
            ]
          },
          "GetToken": {
            "params": [],
            "results": [
              "string"
            ]
          },
          "IsValid": {
            "params": [],
            "results": [
              "bool"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/interfaces/auth.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/interfaces",
      "name": "TokenManager",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "GetToken": {
            "params": [
              "context.Context"
            ],
            "results": [
              "string",
              "error"
            ]
          },
          "IsValid": {
            "params": [],
            "results": [
              "bool"
            ]
          },
          "RefreshToken": {
            "params": [
              "context.Context"
            ],
            "results": [
              "error"
            ]
          },
          "RevokeToken": {
            "params": [
              "context.Context"
            ],
            "results": [
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/interfaces/auth.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/interfaces",
      "name": "ClientInterface",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "Do": {
            "params": [
              "context.Context",
              "*http.Request"
            ],
            "results": [
              "*http.Response",
              "error"
            ]
          },
          "GetBaseURL": {
            "params": [],
            "results": [
              "string"
            ]
          },
          "GetHTTPClient": {
            "params": [],
            "results": [
              "*http.Client"
            ]
          },
          "GetLogger": {
            "params": [],
            "results": [
              "Logger"
            ]
          },
          "GetUserAgent": {
            "params": [],
            "results": [
              "string"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/interfaces/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/interfaces",
      "name": "Logger",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "Debug": {
            "params": [
              "string",
              "...interface{}"
            ],
            "results": []
          },
          "Error": {
            "params": [
              "string",
              "...interface{}"
            ],
            "results": []
          },
          "Info": {
            "params": [
              "string",
              "...interface{}"
            ],
            "results": []
          },
          "Warn": {
            "params": [
              "string",
              "...interface{}"
            ],
            "results": []
          }
        },
        "is_exported": true,
        "file": "pkg/core/interfaces/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/interfaces",
      "name": "ConnectionPool",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "CloseIdleConnections": {
            "params": [],
            "results": []
          },
          "GetClient": {
            "params": [],
            "results": [
              "*http.Client"
            ]
          },
          "GetTransport": {
            "params": [],
            "results": [
              "*http.Transport"
            ]
          },
          "SetTimeout": {
            "params": [
              "time.Duration"
            ],
            "results": []
          }
        },
        "is_exported": true,
        "file": "pkg/core/interfaces/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/interfaces",
      "name": "ConnectionPoolConfig",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "GetIdleConnTimeout": {
            "params": [],
            "results": [
              "time.Duration"
            ]
          },
          "GetMaxConnsPerHost": {
            "params": [],
            "results": [
              "int"
            ]
          },
          "GetMaxIdleConns": {
            "params": [],
            "results": [
              "int"
            ]
          },
          "GetMaxIdleConnsPerHost": {
            "params": [],
            "results": [
              "int"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/interfaces/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/interfaces",
      "name": "ConnectionPoolManager",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "CloseAllIdleConnections": {
            "params": [],
            "results": []
          },
          "GetAllStats": {
            "params": [],
            "results": [
              "map[string]interface{}"
            ]
          },
          "GetPool": {
            "params": [
              "string",
              "ConnectionPoolConfig"
            ],
            "results": [
              "ConnectionPool"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/interfaces/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/interfaces",
      "name": "PooledHTTPClient",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "Do": {
            "params": [
              "*http.Request"
            ],
            "results": [
              "*http.Response",
              "error"
            ]
          },
          "GetPool": {
            "params": [],
            "results": [
              "ConnectionPool"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/interfaces/pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/interfaces",
      "name": "HTTPClient",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "Do": {
            "params": [
              "*http.Request"
            ],
            "results": [
              "*http.Response",
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/interfaces/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/interfaces",
      "name": "HTTPDoer",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "Do": {
            "params": [
              "context.Context",
              "*http.Request"
            ],
            "results": [
              "*http.Response",
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/interfaces/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/interfaces",
      "name": "Transport",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "Delete": {
            "params": [
              "context.Context",
              "string",
              "url.Values",
              "http.Header"
            ],
            "results": [
              "*http.Response",
              "error"
            ]
          },
          "Get": {
            "params": [
              "context.Context",
              "string",
              "url.Values",
              "http.Header"
            ],
            "results": [
              "*http.Response",
              "error"
            ]
          },
          "Patch": {
            "params": [
              "context.Context",
              "string",
              "interface{}",
              "url.Values",
              "http.Header"
            ],
            "results": [
              "*http.Response",
              "error"
            ]
          },
          "Post": {
            "params": [
              "context.Context",
              "string",
              "interface{}",
              "url.Values",
              "http.Header"
            ],
            "results": [
              "*http.Response",
              "error"
            ]
          },
          "Put": {
            "params": [
              "context.Context",
              "string",
              "interface{}",
              "url.Values",
              "http.Header"
            ],
            "results": [
              "*http.Response",
              "error"
            ]
          },
          "Request": {
            "params": [
              "context.Context",
              "string",
              "string",
              "interface{}",
              "url.Values",
              "http.Header"
            ],
            "results": [
              "*http.Response",
              "error"
            ]
          },
          "RoundTrip": {
            "params": [
              "*http.Request"
            ],
            "results": [
              "*http.Response",
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/interfaces/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "LogLevel",
      "type": "type",
      "details": {
        "kind": "alias",
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "LogLevelNone",
      "type": "const",
      "details": {
        "type": "LogLevel",
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "LogLevelError",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "LogLevelWarn",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "LogLevelInfo",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "LogLevelDebug",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Logger",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "Debug": {
            "params": [
              "string",
              "...interface{}"
            ],
            "results": []
          },
          "Error": {
            "params": [
              "string",
              "...interface{}"
            ],
            "results": []
          },
          "Info": {
            "params": [
              "string",
              "...interface{}"
            ],
            "results": []
          },
          "Warn": {
            "params": [
              "string",
              "...interface{}"
            ],
            "results": []
          }
        },
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "DefaultLogger",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "NewDefaultLogger",
      "type": "func",
      "details": {
        "params": [
          "io.Writer",
          "LogLevel"
        ],
        "results": [
          "*DefaultLogger"
        ],
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Debug",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*DefaultLogger",
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Info",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*DefaultLogger",
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Warn",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*DefaultLogger",
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*DefaultLogger",
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "WithLogger",
      "type": "func",
      "details": {
        "params": [
          "Logger"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "WithLogLevel",
      "type": "func",
      "details": {
        "params": [
          "LogLevel"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "WithEnhancedLogger",
      "type": "func",
      "details": {
        "params": [
          "*EnhancedLogger"
        ],
        "results": [
          "core.ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/logging/client_options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "WithLogOutput",
      "type": "func",
      "details": {
        "params": [
          "io.Writer"
        ],
        "results": [
          "core.ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/logging/client_options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "WithLogLevel",
      "type": "func",
      "details": {
        "params": [
          "LogLevel"
        ],
        "results": [
          "core.ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/logging/client_options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "WithJSONLogging",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "core.ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/logging/client_options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "WithTracing",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "core.ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/core/logging/client_options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "LogLevel",
      "type": "type",
      "details": {
        "kind": "alias",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "LogLevelNone",
      "type": "const",
      "details": {
        "type": "LogLevel",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "LogLevelError",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "LogLevelWarn",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "LogLevelInfo",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "LogLevelDebug",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "LogLevelTrace",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "Format",
      "type": "type",
      "details": {
        "kind": "alias",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "FormatText",
      "type": "const",
      "details": {
        "type": "Format",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "FormatJSON",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "EnhancedLogger",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "LogEntry",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Fields": "map[string]interface{}",
          "Level": "string",
          "Message": "string",
          "Timestamp": "string",
          "TraceID": "string"
        },
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "Options",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Fields": "map[string]interface{}",
          "Format": "Format",
          "Level": "LogLevel",
          "Output": "io.Writer",
          "TraceID": "string"
        },
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "NewLogger",
      "type": "func",
      "details": {
        "params": [
          "*Options"
        ],
        "results": [
          "*EnhancedLogger"
        ],
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "Debug",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "Info",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "Warn",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "Trace",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...interface{}"
        ],
        "results": [],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "WithField",
      "type": "func",
      "details": {
        "params": [
          "string",
          "interface{}"
        ],
        "results": [
          "*EnhancedLogger"
        ],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "WithFields",
      "type": "func",
      "details": {
        "params": [
          "map[string]interface{}"
        ],
        "results": [
          "*EnhancedLogger"
        ],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "WithTraceID",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*EnhancedLogger"
        ],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "SetLevel",
      "type": "func",
      "details": {
        "params": [
          "LogLevel"
        ],
        "results": [],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "SetFormat",
      "type": "func",
      "details": {
        "params": [
          "Format"
        ],
        "results": [],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "AsCore",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "core.Logger"
        ],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "GetTraceID",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "HasTraceEnabled",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "LogHTTPRequest",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string",
          "map[string][]string"
        ],
        "results": [],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "LogHTTPResponse",
      "type": "func",
      "details": {
        "params": [
          "int",
          "map[string][]string",
          "time.Duration"
        ],
        "results": [],
        "receiver": "*EnhancedLogger",
        "is_exported": true,
        "file": "pkg/core/logging/logger.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "TracingTransport",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Base": "http.RoundTripper",
          "GenerateID": "func",
          "Logger": "*EnhancedLogger",
          "RequestHook": "func",
          "ResponseHook": "func"
        },
        "is_exported": true,
        "file": "pkg/core/logging/tracing.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "RoundTrip",
      "type": "func",
      "details": {
        "params": [
          "*http.Request"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*TracingTransport",
        "is_exported": true,
        "file": "pkg/core/logging/tracing.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "GenerateTraceID",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "is_exported": true,
        "file": "pkg/core/logging/tracing.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/logging",
      "name": "NewTracingTransport",
      "type": "func",
      "details": {
        "params": [
          "http.RoundTripper",
          "*EnhancedLogger"
        ],
        "results": [
          "*TracingTransport"
        ],
        "is_exported": true,
        "file": "pkg/core/logging/tracing.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "Client",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*http.Client",
          "Pool": "interfaces.ConnectionPool"
        },
        "is_exported": true,
        "file": "pkg/core/pool/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "NewClient",
      "type": "func",
      "details": {
        "params": [
          "string",
          "interfaces.ConnectionPoolConfig"
        ],
        "results": [
          "*Client"
        ],
        "is_exported": true,
        "file": "pkg/core/pool/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetConnectionPool",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "interfaces.ConnectionPool"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/core/pool/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "SetTimeout",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/core/pool/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetHTTPClient",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*http.Client"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/core/pool/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "CloseIdleConnections",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/core/pool/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "Config",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DisableKeepAlives": "bool",
          "ExpectContinueTimeout": "time.Duration",
          "IdleConnTimeout": "time.Duration",
          "MaxConnsPerHost": "int",
          "MaxIdleConns": "int",
          "MaxIdleConnsPerHost": "int",
          "ResponseHeaderTimeout": "time.Duration",
          "TLSHandshakeTimeout": "time.Duration"
        },
        "is_exported": true,
        "file": "pkg/core/pool/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "DefaultConfig",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*Config"
        ],
        "is_exported": true,
        "file": "pkg/core/pool/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetMaxIdleConnsPerHost",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*Config",
        "is_exported": true,
        "file": "pkg/core/pool/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetMaxIdleConns",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*Config",
        "is_exported": true,
        "file": "pkg/core/pool/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetMaxConnsPerHost",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*Config",
        "is_exported": true,
        "file": "pkg/core/pool/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetIdleConnTimeout",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "time.Duration"
        ],
        "receiver": "*Config",
        "is_exported": true,
        "file": "pkg/core/pool/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "ForService",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*Config"
        ],
        "is_exported": true,
        "file": "pkg/core/pool/config.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "PoolManager",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "NewPoolManager",
      "type": "func",
      "details": {
        "params": [
          "*Config"
        ],
        "results": [
          "*PoolManager"
        ],
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetPool",
      "type": "func",
      "details": {
        "params": [
          "string",
          "interfaces.ConnectionPoolConfig"
        ],
        "results": [
          "interfaces.ConnectionPool"
        ],
        "receiver": "*PoolManager",
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "CloseAllIdleConnections",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*PoolManager",
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetAllStats",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*PoolManager",
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "Pool",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*http.Client",
          "Config": "*Config",
          "Transport": "*http.Transport"
        },
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "NewPool",
      "type": "func",
      "details": {
        "params": [
          "*Config"
        ],
        "results": [
          "*Pool"
        ],
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetClient",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*http.Client"
        ],
        "receiver": "*Pool",
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "SetTimeout",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [],
        "receiver": "*Pool",
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "CloseIdleConnections",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*Pool",
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetTransport",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*http.Transport"
        ],
        "receiver": "*Pool",
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "PoolStats",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ActiveByHost": "map[string]int",
          "ActiveHosts": "int",
          "Config": "Config",
          "TotalActive": "int"
        },
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetStats",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "interface{}"
        ],
        "receiver": "*Pool",
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GlobalPoolManager",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/pool",
      "name": "GetServicePool",
      "type": "func",
      "details": {
        "params": [
          "string",
          "interfaces.ConnectionPoolConfig"
        ],
        "results": [
          "interfaces.ConnectionPool"
        ],
        "is_exported": true,
        "file": "pkg/core/pool/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "BackoffStrategy",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "MaxAttempts": {
            "params": [],
            "results": [
              "int"
            ]
          },
          "NextBackoff": {
            "params": [
              "int"
            ],
            "results": [
              "time.Duration"
            ]
          },
          "Reset": {
            "params": [],
            "results": []
          }
        },
        "is_exported": true,
        "file": "pkg/core/ratelimit/backoff.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "ExponentialBackoff",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Factor": "float64",
          "InitialDelay": "time.Duration",
          "Jitter": "bool",
          "JitterFactor": "float64",
          "MaxAttempt": "int",
          "MaxDelay": "time.Duration"
        },
        "is_exported": true,
        "file": "pkg/core/ratelimit/backoff.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "NewExponentialBackoff",
      "type": "func",
      "details": {
        "params": [
          "time.Duration",
          "time.Duration",
          "float64",
          "int"
        ],
        "results": [
          "*ExponentialBackoff"
        ],
        "is_exported": true,
        "file": "pkg/core/ratelimit/backoff.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "NextBackoff",
      "type": "func",
      "details": {
        "params": [
          "int"
        ],
        "results": [
          "time.Duration"
        ],
        "receiver": "*ExponentialBackoff",
        "is_exported": true,
        "file": "pkg/core/ratelimit/backoff.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "Reset",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*ExponentialBackoff",
        "is_exported": true,
        "file": "pkg/core/ratelimit/backoff.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "MaxAttempts",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*ExponentialBackoff",
        "is_exported": true,
        "file": "pkg/core/ratelimit/backoff.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "DefaultBackoff",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "BackoffStrategy"
        ],
        "is_exported": true,
        "file": "pkg/core/ratelimit/backoff.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "RetryableFunc",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/core/ratelimit/backoff.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "RetryWithBackoff",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "RetryableFunc",
          "BackoffStrategy",
          "func"
        ],
        "results": [
          "error"
        ],
        "is_exported": true,
        "file": "pkg/core/ratelimit/backoff.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "IsRetryableError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/core/ratelimit/backoff.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "CircuitBreakerState",
      "type": "type",
      "details": {
        "kind": "alias",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "CircuitClosed",
      "type": "const",
      "details": {
        "type": "CircuitBreakerState",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "CircuitOpen",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "CircuitHalfOpen",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "ErrCircuitOpen",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "CircuitBreakerOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "HalfOpenSuccesses": "int",
          "OnStateChange": "func",
          "Threshold": "int",
          "Timeout": "time.Duration"
        },
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "DefaultCircuitBreakerOptions",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*CircuitBreakerOptions"
        ],
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "CircuitBreaker",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "NewCircuitBreaker",
      "type": "func",
      "details": {
        "params": [
          "*CircuitBreakerOptions"
        ],
        "results": [
          "*CircuitBreaker"
        ],
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "Execute",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "func"
        ],
        "results": [
          "error"
        ],
        "receiver": "*CircuitBreaker",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "AllowRequest",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*CircuitBreaker",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "RecordResult",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [],
        "receiver": "*CircuitBreaker",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "State",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "CircuitBreakerState"
        ],
        "receiver": "*CircuitBreaker",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "Reset",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*CircuitBreaker",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "SetOptions",
      "type": "func",
      "details": {
        "params": [
          "*CircuitBreakerOptions"
        ],
        "results": [],
        "receiver": "*CircuitBreaker",
        "is_exported": true,
        "file": "pkg/core/ratelimit/circuit_breaker.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "RateLimiter",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "GetStats": {
            "params": [],
            "results": [
              "RateLimiterStats"
            ]
          },
          "Reserve": {
            "params": [],
            "results": [
              "time.Duration"
            ]
          },
          "SetOptions": {
            "params": [
              "*RateLimiterOptions"
            ],
            "results": []
          },
          "UpdateLimit": {
            "params": [
              "int",
              "int",
              "int"
            ],
            "results": [
              "error"
            ]
          },
          "Wait": {
            "params": [
              "context.Context"
            ],
            "results": [
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "RateLimiterOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BurstSize": "int",
          "JitterFactor": "float64",
          "MaxRetryCount": "int",
          "MaxRetryDelay": "time.Duration",
          "MinRetryDelay": "time.Duration",
          "RequestsPerSecond": "float64",
          "UseAdaptive": "bool",
          "UseJitter": "bool"
        },
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "DefaultRateLimiterOptions",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*RateLimiterOptions"
        ],
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "RateLimiterStats",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CurrentLimit": "float64",
          "LastUpdated": "time.Time",
          "RemainingTokens": "float64",
          "ResetAt": "time.Time",
          "TotalRequests": "int64",
          "TotalThrottled": "int64",
          "TotalWaitTime": "time.Duration"
        },
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "TokenBucketLimiter",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "NewTokenBucketLimiter",
      "type": "func",
      "details": {
        "params": [
          "*RateLimiterOptions"
        ],
        "results": [
          "*TokenBucketLimiter"
        ],
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "Wait",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "error"
        ],
        "receiver": "*TokenBucketLimiter",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "Reserve",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "time.Duration"
        ],
        "receiver": "*TokenBucketLimiter",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "UpdateLimit",
      "type": "func",
      "details": {
        "params": [
          "int",
          "int",
          "int"
        ],
        "results": [
          "error"
        ],
        "receiver": "*TokenBucketLimiter",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "SetOptions",
      "type": "func",
      "details": {
        "params": [
          "*RateLimiterOptions"
        ],
        "results": [],
        "receiver": "*TokenBucketLimiter",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "GetStats",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "RateLimiterStats"
        ],
        "receiver": "*TokenBucketLimiter",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "NoopRateLimiter",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "NewNoopRateLimiter",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*NoopRateLimiter"
        ],
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "Wait",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "error"
        ],
        "receiver": "*NoopRateLimiter",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "Reserve",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "time.Duration"
        ],
        "receiver": "*NoopRateLimiter",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "UpdateLimit",
      "type": "func",
      "details": {
        "params": [
          "int",
          "int",
          "int"
        ],
        "results": [
          "error"
        ],
        "receiver": "*NoopRateLimiter",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "SetOptions",
      "type": "func",
      "details": {
        "params": [
          "*RateLimiterOptions"
        ],
        "results": [],
        "receiver": "*NoopRateLimiter",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "GetStats",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "RateLimiterStats"
        ],
        "receiver": "*NoopRateLimiter",
        "is_exported": true,
        "file": "pkg/core/ratelimit/limiter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "ResponseRateLimitInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Limit": "int",
          "Remaining": "int",
          "Reset": "int",
          "Retry": "int",
          "Window": "int"
        },
        "is_exported": true,
        "file": "pkg/core/ratelimit/response_handler.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "ExtractRateLimitInfo",
      "type": "func",
      "details": {
        "params": [
          "*http.Response"
        ],
        "results": [
          "*ResponseRateLimitInfo",
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/core/ratelimit/response_handler.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/ratelimit",
      "name": "UpdateRateLimiterFromResponse",
      "type": "func",
      "details": {
        "params": [
          "RateLimiter",
          "*http.Response"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/core/ratelimit/response_handler.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "ConnectionPoolConfig",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DisableKeepAlives": "bool",
          "ExpectContinueTimeout": "time.Duration",
          "IdleConnTimeout": "time.Duration",
          "MaxConnsPerHost": "int",
          "MaxIdleConns": "int",
          "MaxIdleConnsPerHost": "int",
          "ResponseHeaderTimeout": "time.Duration",
          "TLSClientConfig": "*tls.Config",
          "TLSHandshakeTimeout": "time.Duration"
        },
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "DefaultConnectionPoolConfig",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*ConnectionPoolConfig"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetMaxIdleConnsPerHost",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*ConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetMaxIdleConns",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*ConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetMaxConnsPerHost",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*ConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetIdleConnTimeout",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "time.Duration"
        ],
        "receiver": "*ConnectionPoolConfig",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "ConnectionPool",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*http.Client",
          "Config": "*ConnectionPoolConfig",
          "Transport": "*http.Transport"
        },
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "NewConnectionPool",
      "type": "func",
      "details": {
        "params": [
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*ConnectionPool"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetClient",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*http.Client"
        ],
        "receiver": "*ConnectionPool",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "SetTimeout",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [],
        "receiver": "*ConnectionPool",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "CloseIdleConnections",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*ConnectionPool",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetTransport",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*http.Transport"
        ],
        "receiver": "*ConnectionPool",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetStats",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "ConnectionPoolStats"
        ],
        "receiver": "*ConnectionPool",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "ConnectionPoolStats",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ActiveByHost": "map[string]int",
          "ActiveHosts": "int",
          "Config": "ConnectionPoolConfig",
          "TotalActive": "int"
        },
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "ConnectionPoolTransport",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Pool": "*ConnectionPool",
          "Underlying": "*http.Transport"
        },
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "NewConnectionPoolTransport",
      "type": "func",
      "details": {
        "params": [
          "*ConnectionPool"
        ],
        "results": [
          "*ConnectionPoolTransport"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "RoundTrip",
      "type": "func",
      "details": {
        "params": [
          "*http.Request"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*ConnectionPoolTransport",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "ConnectionPoolManager",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "NewConnectionPoolManager",
      "type": "func",
      "details": {
        "params": [
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*ConnectionPoolManager"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetPool",
      "type": "func",
      "details": {
        "params": [
          "string",
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*ConnectionPool"
        ],
        "receiver": "*ConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "CloseAllIdleConnections",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*ConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetAllStats",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]ConnectionPoolStats"
        ],
        "receiver": "*ConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GlobalConnectionPoolManager",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetServicePool",
      "type": "func",
      "details": {
        "params": [
          "string",
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*ConnectionPool"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/connection_pool.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "DebugTransport",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Debug": "bool",
          "Logger": "*log.Logger",
          "Trace": "bool",
          "Transport": "http.RoundTripper"
        },
        "is_exported": true,
        "file": "pkg/core/transport/http_debug.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "NewDebugTransport",
      "type": "func",
      "details": {
        "params": [
          "http.RoundTripper"
        ],
        "results": [
          "*DebugTransport"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/http_debug.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "RoundTrip",
      "type": "func",
      "details": {
        "params": [
          "*http.Request"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*DebugTransport",
        "is_exported": true,
        "file": "pkg/core/transport/http_debug.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "EnableHTTPDebugging",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/transport/http_debug.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "SetHTTPDebugOutput",
      "type": "func",
      "details": {
        "params": [
          "io.Writer"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/transport/http_debug.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "IsDebugEnabled",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/http_debug.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "SetDebugLevel",
      "type": "func",
      "details": {
        "params": [
          "bool",
          "bool"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/core/transport/http_debug.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "TransportConnectionPool",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "embedded": "*ConnectionPool"
        },
        "is_exported": true,
        "file": "pkg/core/transport/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "NewTransportConnectionPool",
      "type": "func",
      "details": {
        "params": [
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*TransportConnectionPool"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "TransportConnectionPoolManager",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "embedded": "*ConnectionPoolManager"
        },
        "is_exported": true,
        "file": "pkg/core/transport/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "NewTransportConnectionPoolManager",
      "type": "func",
      "details": {
        "params": [
          "*ConnectionPoolConfig"
        ],
        "results": [
          "*TransportConnectionPoolManager"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetPool",
      "type": "func",
      "details": {
        "params": [
          "string",
          "interfaces.ConnectionPoolConfig"
        ],
        "results": [
          "interfaces.ConnectionPool"
        ],
        "receiver": "*TransportConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/transport/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "GetAllStats",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*TransportConnectionPoolManager",
        "is_exported": true,
        "file": "pkg/core/transport/pool_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "Transport",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "interfaces.ClientInterface",
          "Debug": "bool",
          "Logger": "*log.Logger",
          "Trace": "bool"
        },
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "Options",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Debug": "bool",
          "Logger": "*log.Logger",
          "Trace": "bool"
        },
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "NewTransport",
      "type": "func",
      "details": {
        "params": [
          "interfaces.ClientInterface",
          "*Options"
        ],
        "results": [
          "*Transport"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "DeferredTransport",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Debug": "bool",
          "Logger": "*log.Logger",
          "Trace": "bool"
        },
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "NewDeferredTransport",
      "type": "func",
      "details": {
        "params": [
          "*Options"
        ],
        "results": [
          "*DeferredTransport"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "AttachClient",
      "type": "func",
      "details": {
        "params": [
          "interfaces.ClientInterface"
        ],
        "results": [
          "*Transport"
        ],
        "receiver": "*DeferredTransport",
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "Request",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "interface{}",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*Transport",
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "Get",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*Transport",
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "Post",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "interface{}",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*Transport",
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "Put",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "interface{}",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*Transport",
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "Delete",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*Transport",
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "Patch",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "interface{}",
          "url.Values",
          "http.Header"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*Transport",
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "RoundTrip",
      "type": "func",
      "details": {
        "params": [
          "*http.Request"
        ],
        "results": [
          "*http.Response",
          "error"
        ],
        "receiver": "*Transport",
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core/transport",
      "name": "DecodeResponse",
      "type": "func",
      "details": {
        "params": [
          "*http.Response",
          "interface{}"
        ],
        "results": [
          "error"
        ],
        "is_exported": true,
        "file": "pkg/core/transport/transport.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "InitTransport",
      "type": "func",
      "details": {
        "params": [
          "interfaces.ClientInterface",
          "bool",
          "bool"
        ],
        "results": [
          "interfaces.Transport"
        ],
        "is_exported": true,
        "file": "pkg/core/transport_init.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Version",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "APIVersion",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Beta": "bool",
          "Major": "int",
          "Minor": "int",
          "Patch": "int",
          "Service": "string"
        },
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "VersionInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BuildDate": "string",
          "FullVersion": "string",
          "GitCommit": "string",
          "GoVersion": "string",
          "Version": "string"
        },
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "GetInfo",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "VersionInfo"
        ],
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "IsDevelopment",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "UserAgent",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "ParseVersion",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string"
        ],
        "results": [
          "*APIVersion",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "ParseAPIVersion",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string"
        ],
        "results": [
          "*APIVersion",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "String",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*APIVersion",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Compare",
      "type": "func",
      "details": {
        "params": [
          "*APIVersion"
        ],
        "results": [
          "int"
        ],
        "receiver": "*APIVersion",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "GetEndpoint",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*APIVersion",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Endpoint",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*APIVersion",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "IsCompatible",
      "type": "func",
      "details": {
        "params": [
          "interface{}"
        ],
        "results": [
          "bool"
        ],
        "receiver": "*APIVersion",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "ExtractVersionFromURL",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "string"
        ],
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "VersionCheck",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "NewVersionCheck",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*VersionCheck"
        ],
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "EnableVersionCheck",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*VersionCheck",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "DisableVersionCheck",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*VersionCheck",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "IsEnabled",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*VersionCheck",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "SetCustomVersion",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*VersionCheck",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "GetCustomVersion",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "string",
          "bool"
        ],
        "receiver": "*VersionCheck",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "MarkServiceChecked",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [],
        "receiver": "*VersionCheck",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "IsServiceChecked",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "bool"
        ],
        "receiver": "*VersionCheck",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "Enabled",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*VersionCheck",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "core",
      "name": "CheckServiceVersion",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*VersionCheck",
        "is_exported": true,
        "file": "pkg/core/version.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "ProgressBar",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "ProgressBarOption",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "WithWidth",
      "type": "func",
      "details": {
        "params": [
          "int"
        ],
        "results": [
          "ProgressBarOption"
        ],
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "WithRefreshRate",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [
          "ProgressBarOption"
        ],
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "WithSpeed",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ProgressBarOption"
        ],
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "WithETA",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ProgressBarOption"
        ],
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "WithValues",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ProgressBarOption"
        ],
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "WithPercent",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ProgressBarOption"
        ],
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "WithHideAfterComplete",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ProgressBarOption"
        ],
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "WithMessage",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ProgressBarOption"
        ],
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "NewProgressBar",
      "type": "func",
      "details": {
        "params": [
          "io.Writer",
          "int64",
          "...ProgressBarOption"
        ],
        "results": [
          "*ProgressBar"
        ],
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "Start",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*ProgressBar",
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "Update",
      "type": "func",
      "details": {
        "params": [
          "int64"
        ],
        "results": [],
        "receiver": "*ProgressBar",
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "SetMessage",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [],
        "receiver": "*ProgressBar",
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "Complete",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*ProgressBar",
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "Stop",
      "type": "func",
      "details": {
        "params": [],
        "results": [],
        "receiver": "*ProgressBar",
        "is_exported": true,
        "file": "pkg/metrics/progress.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "Reporter",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "ReportDetailed": {
            "params": [
              "io.Writer",
              "*TransferMetrics"
            ],
            "results": [
              "error"
            ]
          },
          "ReportProgress": {
            "params": [
              "io.Writer",
              "*TransferMetrics"
            ],
            "results": [
              "error"
            ]
          },
          "ReportSummary": {
            "params": [
              "io.Writer",
              "*TransferMetrics"
            ],
            "results": [
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/metrics/reporting.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "TextReporter",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/metrics/reporting.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "NewTextReporter",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*TextReporter"
        ],
        "is_exported": true,
        "file": "pkg/metrics/reporting.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "ReportSummary",
      "type": "func",
      "details": {
        "params": [
          "io.Writer",
          "*TransferMetrics"
        ],
        "results": [
          "error"
        ],
        "receiver": "*TextReporter",
        "is_exported": true,
        "file": "pkg/metrics/reporting.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "ReportDetailed",
      "type": "func",
      "details": {
        "params": [
          "io.Writer",
          "*TransferMetrics"
        ],
        "results": [
          "error"
        ],
        "receiver": "*TextReporter",
        "is_exported": true,
        "file": "pkg/metrics/reporting.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "ReportProgress",
      "type": "func",
      "details": {
        "params": [
          "io.Writer",
          "*TransferMetrics"
        ],
        "results": [
          "error"
        ],
        "receiver": "*TextReporter",
        "is_exported": true,
        "file": "pkg/metrics/reporting.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "JSONReporter",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/metrics/reporting.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "NewJSONReporter",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*JSONReporter"
        ],
        "is_exported": true,
        "file": "pkg/metrics/reporting.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "MetricsStorage",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "Cleanup": {
            "params": [
              "time.Duration"
            ],
            "results": [
              "error"
            ]
          },
          "DeleteMetrics": {
            "params": [
              "string"
            ],
            "results": [
              "error"
            ]
          },
          "ListTransferIDs": {
            "params": [],
            "results": [
              "[]string",
              "error"
            ]
          },
          "RetrieveMetrics": {
            "params": [
              "string"
            ],
            "results": [
              "*TransferMetrics",
              "error"
            ]
          },
          "StoreMetrics": {
            "params": [
              "string",
              "*TransferMetrics"
            ],
            "results": [
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "FileMetricsStorage",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "NewFileMetricsStorage",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*FileMetricsStorage",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "StoreMetrics",
      "type": "func",
      "details": {
        "params": [
          "string",
          "*TransferMetrics"
        ],
        "results": [
          "error"
        ],
        "receiver": "*FileMetricsStorage",
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "RetrieveMetrics",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*TransferMetrics",
          "error"
        ],
        "receiver": "*FileMetricsStorage",
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "ListTransferIDs",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "[]string",
          "error"
        ],
        "receiver": "*FileMetricsStorage",
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "DeleteMetrics",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*FileMetricsStorage",
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "Cleanup",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [
          "error"
        ],
        "receiver": "*FileMetricsStorage",
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "StorageConfig",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AutoCleanup": "bool",
          "AutoSave": "bool",
          "CleanupAge": "time.Duration",
          "SaveInterval": "time.Duration",
          "Storage": "MetricsStorage"
        },
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "WithStorage",
      "type": "func",
      "details": {
        "params": [
          "*StorageConfig"
        ],
        "results": [
          "*DefaultPerformanceMonitor"
        ],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "SaveMetrics",
      "type": "func",
      "details": {
        "params": [
          "MetricsStorage",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "LoadMetrics",
      "type": "func",
      "details": {
        "params": [
          "MetricsStorage",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "LoadAllMetrics",
      "type": "func",
      "details": {
        "params": [
          "MetricsStorage"
        ],
        "results": [
          "error"
        ],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/storage.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "TransferMetrics",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AvgBytesPerSecond": "float64",
          "BytesPerSecond": "float64",
          "BytesTransferred": "int64",
          "DestEndpoint": "string",
          "EndTime": "time.Time",
          "ErrorCount": "int",
          "EstimatedTimeLeft": "time.Duration",
          "FilesTotal": "int64",
          "FilesTransferred": "int64",
          "Label": "string",
          "LastError": "string",
          "LastUpdated": "time.Time",
          "PeakBytesPerSecond": "float64",
          "PercentComplete": "float64",
          "RetryCount": "int",
          "SourceEndpoint": "string",
          "StartTime": "time.Time",
          "Status": "string",
          "TaskID": "string",
          "ThroughputSamples": "[]ThroughputSample",
          "TotalBytes": "int64",
          "TransferID": "string"
        },
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "ThroughputSample",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BytesPerSecond": "float64",
          "BytesTransferred": "int64",
          "FilesTransferred": "int64",
          "Timestamp": "time.Time"
        },
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "PerformanceMonitor",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "GetMetrics": {
            "params": [
              "string"
            ],
            "results": [
              "*TransferMetrics",
              "bool"
            ]
          },
          "ListActiveTransfers": {
            "params": [],
            "results": [
              "[]string"
            ]
          },
          "RecordError": {
            "params": [
              "string",
              "error"
            ],
            "results": []
          },
          "RecordRetry": {
            "params": [
              "string"
            ],
            "results": []
          },
          "SetStatus": {
            "params": [
              "string",
              "string"
            ],
            "results": []
          },
          "SetTotalBytes": {
            "params": [
              "string",
              "int64"
            ],
            "results": []
          },
          "SetTotalFiles": {
            "params": [
              "string",
              "int64"
            ],
            "results": []
          },
          "StartMonitoring": {
            "params": [
              "string",
              "string",
              "string",
              "string",
              "string"
            ],
            "results": [
              "*TransferMetrics"
            ]
          },
          "StopMonitoring": {
            "params": [
              "string"
            ],
            "results": []
          },
          "UpdateMetrics": {
            "params": [
              "string",
              "int64",
              "int64"
            ],
            "results": []
          }
        },
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "DefaultPerformanceMonitor",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "NewPerformanceMonitor",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*DefaultPerformanceMonitor"
        ],
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "WithSampleInterval",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [
          "*DefaultPerformanceMonitor"
        ],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "WithMaxSamples",
      "type": "func",
      "details": {
        "params": [
          "int"
        ],
        "results": [
          "*DefaultPerformanceMonitor"
        ],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "StartMonitoring",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string",
          "string",
          "string",
          "string"
        ],
        "results": [
          "*TransferMetrics"
        ],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "StopMonitoring",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "UpdateMetrics",
      "type": "func",
      "details": {
        "params": [
          "string",
          "int64",
          "int64"
        ],
        "results": [],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "GetMetrics",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*TransferMetrics",
          "bool"
        ],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "ListActiveTransfers",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "[]string"
        ],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "SetTotalBytes",
      "type": "func",
      "details": {
        "params": [
          "string",
          "int64"
        ],
        "results": [],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "SetTotalFiles",
      "type": "func",
      "details": {
        "params": [
          "string",
          "int64"
        ],
        "results": [],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "RecordError",
      "type": "func",
      "details": {
        "params": [
          "string",
          "error"
        ],
        "results": [],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "RecordRetry",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "metrics",
      "name": "SetStatus",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string"
        ],
        "results": [],
        "receiver": "*DefaultPerformanceMonitor",
        "is_exported": true,
        "file": "pkg/metrics/transfer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "AuthorizerAdapter",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/auth/adapter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "NewAuthorizerAdapter",
      "type": "func",
      "details": {
        "params": [
          "interfaces.Authorizer"
        ],
        "results": [
          "*AuthorizerAdapter"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/adapter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "GetAuthorizationHeader",
      "type": "func",
      "details": {
        "params": [
          "...context.Context"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*AuthorizerAdapter",
        "is_exported": true,
        "file": "pkg/services/auth/adapter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsValid",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*AuthorizerAdapter",
        "is_exported": true,
        "file": "pkg/services/auth/adapter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "GetToken",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*AuthorizerAdapter",
        "is_exported": true,
        "file": "pkg/services/auth/adapter.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "DefaultBaseURL",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "AuthScope",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "Client",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*core.Client",
          "ClientID": "string",
          "ClientSecret": "string",
          "RedirectURL": "string",
          "Transport": "*transport.Transport"
        },
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "NewClient",
      "type": "func",
      "details": {
        "params": [
          "...ClientOption"
        ],
        "results": [
          "*Client",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "SetRedirectURL",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "GetAuthorizationURL",
      "type": "func",
      "details": {
        "params": [
          "string",
          "...string"
        ],
        "results": [
          "string"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ExchangeAuthorizationCode",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*TokenResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "RefreshToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*TokenResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IntrospectToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*TokenInfo",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "RevokeToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "GetClientCredentialsToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "...string"
        ],
        "results": [
          "*TokenResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsTokenValid",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "bool",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "GetTokenExpiry",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "time.Time",
          "bool",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ShouldRefresh",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "time.Duration"
        ],
        "results": [
          "bool",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "CreateClientCredentialsAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "...string"
        ],
        "results": [
          "*authorizers.ClientCredentialsAuthorizer"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "CreateRefreshableTokenAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string",
          "int"
        ],
        "results": [
          "*authorizers.RefreshableTokenAuthorizer"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "CreateStaticTokenAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*authorizers.StaticTokenAuthorizer"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ScopeOpenID",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/constants.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ScopeProfile",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/constants.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ScopeEmail",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/constants.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ScopeOfflineAccess",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/constants.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ScopeAllScopes",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/constants.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrCodeInvalidGrant",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrCodeInvalidRequest",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrCodeInvalidClient",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrCodeInvalidScope",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrCodeUnsupportedTokenType",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrCodeAccessDenied",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrCodeServerError",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrCodeTemporarilyUnavailable",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrInvalidGrant",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrInvalidClient",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrInvalidScope",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrAccessDenied",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrServerError",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrUnauthorized",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrBadRequest",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "AuthError",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Code": "string",
          "Description": "string",
          "StatusCode": "int"
        },
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*AuthError",
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsInvalidGrant",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsInvalidClient",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsInvalidScope",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsAccessDenied",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsServerError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsUnauthorized",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsBadRequest",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "MFARequiredError",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Challenge": "*MFAChallenge",
          "Response": "*ErrorResponse"
        },
        "is_exported": true,
        "file": "pkg/services/auth/mfa.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*MFARequiredError",
        "is_exported": true,
        "file": "pkg/services/auth/mfa.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "MFAChallenge",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AllowedTypes": "[]string",
          "ChallengeID": "string",
          "Extra": "map[string]interface{}",
          "Prompt": "string",
          "Type": "string"
        },
        "is_exported": true,
        "file": "pkg/services/auth/mfa.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "MFAResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ChallengeID": "string",
          "Type": "string",
          "Value": "string"
        },
        "is_exported": true,
        "file": "pkg/services/auth/mfa.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsMFAError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/mfa.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "GetMFAChallenge",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "*MFAChallenge"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/mfa.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "CheckForMFARequired",
      "type": "func",
      "details": {
        "params": [
          "*http.Response"
        ],
        "results": [
          "*MFARequiredError",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/mfa.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "GetMFAChallenge",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*MFAChallenge",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/mfa.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "RespondToMFAChallenge",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*MFAResponse"
        ],
        "results": [
          "*TokenResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/mfa.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ExchangeAuthorizationCodeWithMFA",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "func"
        ],
        "results": [
          "*TokenResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/mfa.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "RefreshTokenWithMFA",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "func"
        ],
        "results": [
          "*TokenResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/mfa.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "TokenResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AccessToken": "string",
          "DependentTokens": "[]json.RawMessage",
          "ExpiresIn": "int",
          "ExpiryTime": "time.Time",
          "OtherTokens": "[]json.RawMessage",
          "RefreshToken": "string",
          "ResourceServer": "string",
          "Scope": "string",
          "State": "string",
          "TokenType": "string"
        },
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "HasRefreshToken",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*TokenResponse",
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsValid",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*TokenResponse",
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ExpiresAt",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "time.Time"
        ],
        "receiver": "*TokenResponse",
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "GetOtherTokens",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "[]*TokenResponse",
          "error"
        ],
        "receiver": "*TokenResponse",
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "GetDependentTokens",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "[]*TokenResponse",
          "error"
        ],
        "receiver": "*TokenResponse",
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "Identity",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Email": "string",
          "IdentityID": "string",
          "IdentityProvider": "string",
          "Name": "string",
          "Organization": "string",
          "Status": "string",
          "Username": "string"
        },
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IdentitySet",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Identities": "[]Identity"
        },
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "TokenInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Active": "bool",
          "ClientID": "string",
          "Email": "string",
          "Exp": "int64",
          "IdentitySet": "[]string",
          "Name": "string",
          "Scope": "string",
          "Subject": "string",
          "SubjectType": "string",
          "Username": "string"
        },
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsActive",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*TokenInfo",
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ExpiresAt",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "time.Time"
        ],
        "receiver": "*TokenInfo",
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "IsExpired",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*TokenInfo",
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "AuthorizeResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Code": "string",
          "State": "string"
        },
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrorResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Error": "string",
          "ErrorDescription": "string"
        },
        "is_exported": true,
        "file": "pkg/services/auth/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ClientOption",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/services/auth/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "WithClientID",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "WithClientSecret",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "WithRedirectURL",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "WithAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "interfaces.Authorizer"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "WithCoreOption",
      "type": "func",
      "details": {
        "params": [
          "core.ClientOption"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "WithBaseURL",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "WithHTTPDebugging",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "WithHTTPTracing",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/auth/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrTokenInvalid",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/token_utils.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ErrTokenExpired",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/auth/token_utils.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "ValidateToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/token_utils.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "GetRemainingValidity",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "time.Duration",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/token_utils.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "UserInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Email": "string",
          "EmailVerified": "bool",
          "IdentityProvider": "string",
          "LastAuthenticated": "time.Time",
          "Name": "string",
          "OrganizationID": "string",
          "PreferredUsername": "string",
          "Sub": "string"
        },
        "is_exported": true,
        "file": "pkg/services/auth/user_info.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/auth",
      "name": "GetUserInfo",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*UserInfo",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/auth/user_info.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "CreateWorkflow",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*WorkflowCreateRequest"
        ],
        "results": [
          "*WorkflowResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "GetWorkflow",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*WorkflowResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListWorkflows",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "[]WorkflowResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DeleteWorkflow",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "RunWorkflow",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*WorkflowRunRequest"
        ],
        "results": [
          "*WorkflowRunResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "GetWorkflowStatus",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*WorkflowStatusResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "CancelWorkflowRun",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "CreateTaskGroup",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*TaskGroupCreateRequest"
        ],
        "results": [
          "*TaskGroupResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "RunTaskGroup",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*TaskGroupRunRequest"
        ],
        "results": [
          "*TaskGroupRunResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "GetTaskGroupStatus",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*TaskGroupStatusResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WaitForWorkflowCompletion",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "time.Duration",
          "time.Duration"
        ],
        "results": [
          "*WorkflowStatusResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WaitForTaskGroupCompletion",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "time.Duration",
          "time.Duration"
        ],
        "results": [
          "*TaskGroupStatusResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "RunDependencyGraph",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*DependencyGraphRequest"
        ],
        "results": [
          "*DependencyGraphResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "GetDependencyGraphStatus",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*DependencyGraphStatusResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WaitForDependencyGraphCompletion",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "time.Duration",
          "time.Duration"
        ],
        "results": [
          "*DependencyGraphStatusResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DefaultBaseURL",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ComputeScope",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "Client",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*core.Client"
        },
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "NewClient",
      "type": "func",
      "details": {
        "params": [
          "...ClientOption"
        ],
        "results": [
          "*Client",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListEndpoints",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListEndpointsOptions"
        ],
        "results": [
          "*ComputeEndpointList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "GetEndpoint",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*ComputeEndpoint",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "RegisterFunction",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*FunctionRegisterRequest"
        ],
        "results": [
          "*FunctionResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "GetFunction",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*FunctionResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListFunctions",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListFunctionsOptions"
        ],
        "results": [
          "*FunctionList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "UpdateFunction",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*FunctionUpdateRequest"
        ],
        "results": [
          "*FunctionResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DeleteFunction",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "RunFunction",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*TaskRequest"
        ],
        "results": [
          "*TaskResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "RunBatch",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*BatchTaskRequest"
        ],
        "results": [
          "*BatchTaskResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "GetTaskStatus",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*TaskStatus",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "GetBatchStatus",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "[]string"
        ],
        "results": [
          "*BatchTaskStatus",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListTasks",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*TaskListOptions"
        ],
        "results": [
          "*TaskList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "CancelTask",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "RegisterContainer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ContainerRegistrationRequest"
        ],
        "results": [
          "*ContainerResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/container.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "GetContainer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*ContainerResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/container.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListContainers",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListContainersOptions"
        ],
        "results": [
          "*ContainerList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/container.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "UpdateContainer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*ContainerUpdateRequest"
        ],
        "results": [
          "*ContainerResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/container.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DeleteContainer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/container.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "RunContainerFunction",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ContainerTaskRequest"
        ],
        "results": [
          "*TaskResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/container.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "RegisterDependency",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*DependencyRegistrationRequest"
        ],
        "results": [
          "*DependencyResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/dependencies.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "GetDependency",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*DependencyResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/dependencies.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListDependencies",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListDependenciesOptions"
        ],
        "results": [
          "*DependencyList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/dependencies.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "UpdateDependency",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*DependencyUpdateRequest"
        ],
        "results": [
          "*DependencyResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/dependencies.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DeleteDependency",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/dependencies.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "AttachDependencyToFunction",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/dependencies.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DetachDependencyFromFunction",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/dependencies.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListFunctionDependencies",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "[]DependencyResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/dependencies.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "CreateEnvironment",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*EnvironmentCreateRequest"
        ],
        "results": [
          "*EnvironmentResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/environment.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "GetEnvironment",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*EnvironmentResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/environment.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListEnvironments",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListEnvironmentsOptions"
        ],
        "results": [
          "*EnvironmentList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/environment.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "UpdateEnvironment",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*EnvironmentUpdateRequest"
        ],
        "results": [
          "*EnvironmentResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/environment.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DeleteEnvironment",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/environment.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ApplyEnvironmentToTask",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*TaskRequest",
          "string"
        ],
        "results": [
          "*TaskRequest",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/environment.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "CreateSecret",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*SecretCreateRequest"
        ],
        "results": [
          "*SecretResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/environment.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListSecrets",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "[]SecretResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/environment.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DeleteSecret",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/compute/environment.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ComputeEndpoint",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Connected": "bool",
          "CreatedAt": "time.Time",
          "Description": "string",
          "ID": "string",
          "LastModified": "time.Time",
          "Metrics": "*ComputeEndpointMetrics",
          "Name": "string",
          "Owner": "string",
          "Public": "bool",
          "Status": "string",
          "Type": "string",
          "UUID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ComputeEndpointMetrics",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "OutstandingCounts": "map[string]int",
          "RunningCounts": "map[string]int",
          "Utilization": "float64"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ComputeEndpointList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Endpoints": "[]ComputeEndpoint"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListEndpointsOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FilterScope": "string",
          "FilterStatus": "string",
          "IncludeInfo": "bool",
          "Marker": "string",
          "OrderBy": "string",
          "PerPage": "int",
          "Search": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "FunctionResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Container": "*Container",
          "CreatedAt": "time.Time",
          "Description": "string",
          "Detail": "string",
          "Environment": "map[string]string",
          "Function": "string",
          "ID": "string",
          "ModifiedAt": "time.Time",
          "Name": "string",
          "Owner": "string",
          "Public": "bool",
          "Status": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "FunctionList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Functions": "[]FunctionResponse",
          "HasNextPage": "bool",
          "Limit": "int",
          "Offset": "int",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListFunctionsOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FilterScope": "string",
          "Marker": "string",
          "OrderBy": "string",
          "PerPage": "int",
          "Search": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "FunctionRegisterRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Container": "*Container",
          "Description": "string",
          "Environment": "map[string]string",
          "Function": "string",
          "Name": "string",
          "Public": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "FunctionUpdateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Container": "*Container",
          "Description": "string",
          "Environment": "map[string]string",
          "Function": "string",
          "Name": "string",
          "Public": "*bool"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "Container",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Arguments": "[]string",
          "Image": "string",
          "Type": "string",
          "Unpack": "bool",
          "Variables": "map[string]string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ContainerRegistrationRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Arguments": "[]string",
          "Description": "string",
          "Image": "string",
          "Name": "string",
          "Public": "bool",
          "Registry": "string",
          "Type": "string",
          "Variables": "map[string]string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ContainerUpdateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Arguments": "[]string",
          "Description": "string",
          "Image": "string",
          "Name": "string",
          "Public": "*bool",
          "Registry": "string",
          "Type": "string",
          "Variables": "map[string]string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ContainerResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Arguments": "[]string",
          "CreatedAt": "time.Time",
          "Description": "string",
          "ID": "string",
          "Image": "string",
          "ModifiedAt": "time.Time",
          "Name": "string",
          "Owner": "string",
          "Public": "bool",
          "Registry": "string",
          "Type": "string",
          "Variables": "map[string]string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ContainerList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Containers": "[]ContainerResponse",
          "HasNextPage": "bool",
          "Limit": "int",
          "Offset": "int",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListContainersOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Marker": "string",
          "PerPage": "int",
          "Search": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ContainerTaskRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Args": "[]any",
          "Code": "string",
          "ContainerID": "string",
          "EndpointID": "string",
          "Environment": "map[string]string",
          "ExecMode": "string",
          "FunctionID": "string",
          "Kwargs": "map[string]any",
          "Priority": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DependencyRegistrationRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CustomDependencies": "[]CustomDependency",
          "Description": "string",
          "GitRef": "string",
          "GitRepo": "string",
          "Name": "string",
          "Public": "bool",
          "PythonPackages": "[]PythonPackage",
          "PythonRequirements": "string",
          "Version": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DependencyUpdateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CustomDependencies": "[]CustomDependency",
          "Description": "string",
          "GitRef": "string",
          "GitRepo": "string",
          "Name": "string",
          "Public": "*bool",
          "PythonPackages": "[]PythonPackage",
          "PythonRequirements": "string",
          "Version": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DependencyResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CreatedAt": "time.Time",
          "CustomDependencies": "[]CustomDependency",
          "Description": "string",
          "GitRef": "string",
          "GitRepo": "string",
          "ID": "string",
          "ModifiedAt": "time.Time",
          "Name": "string",
          "Owner": "string",
          "Public": "bool",
          "PythonPackages": "[]PythonPackage",
          "PythonRequirements": "string",
          "Version": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "PythonPackage",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ExtraIndices": "[]string",
          "Name": "string",
          "Version": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "CustomDependency",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Commands": "[]string",
          "Name": "string",
          "Specs": "map[string]interface{}",
          "Type": "string",
          "Version": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DependencyList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Dependencies": "[]DependencyResponse",
          "HasNextPage": "bool",
          "Limit": "int",
          "Offset": "int",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListDependenciesOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Marker": "string",
          "PerPage": "int",
          "Search": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "EnvironmentCreateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Description": "string",
          "Name": "string",
          "Public": "bool",
          "Resources": "map[string]interface{}",
          "Secrets": "[]string",
          "Variables": "map[string]string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "EnvironmentUpdateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Description": "string",
          "Name": "string",
          "Public": "*bool",
          "Resources": "map[string]interface{}",
          "Secrets": "[]string",
          "Variables": "map[string]string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "EnvironmentResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CreatedAt": "time.Time",
          "Description": "string",
          "ID": "string",
          "ModifiedAt": "time.Time",
          "Name": "string",
          "Owner": "string",
          "Public": "bool",
          "Resources": "map[string]interface{}",
          "Secrets": "[]string",
          "Variables": "map[string]string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "EnvironmentList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Environments": "[]EnvironmentResponse",
          "HasNextPage": "bool",
          "Limit": "int",
          "Offset": "int",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListEnvironmentsOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Marker": "string",
          "PerPage": "int",
          "Search": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "SecretCreateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Description": "string",
          "Name": "string",
          "Value": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "SecretResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CreatedAt": "time.Time",
          "Description": "string",
          "ID": "string",
          "ModifiedAt": "time.Time",
          "Name": "string",
          "Owner": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WorkflowCreateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Dependencies": "map[string][]string",
          "Description": "string",
          "ErrorHandling": "string",
          "Metadata": "map[string]string",
          "Name": "string",
          "Public": "bool",
          "RetryPolicy": "*RetryPolicy",
          "Tasks": "[]WorkflowTask"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WorkflowUpdateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Dependencies": "map[string][]string",
          "Description": "string",
          "ErrorHandling": "string",
          "Metadata": "map[string]string",
          "Name": "string",
          "Public": "*bool",
          "RetryPolicy": "*RetryPolicy",
          "Tasks": "[]WorkflowTask"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WorkflowList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "HasNextPage": "bool",
          "Limit": "int",
          "Offset": "int",
          "Total": "int",
          "Workflows": "[]WorkflowResponse"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListWorkflowsOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FilterScope": "string",
          "Marker": "string",
          "PerPage": "int",
          "Search": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WorkflowTask",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Args": "[]any",
          "EndpointID": "string",
          "Environment": "string",
          "FunctionID": "string",
          "ID": "string",
          "Kwargs": "map[string]any",
          "Name": "string",
          "RetryPolicy": "*RetryPolicy",
          "Timeout": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "RetryPolicy",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BackoffFactor": "float64",
          "MaxInterval": "int",
          "MaxRetries": "int",
          "RetryConditions": "[]string",
          "RetryInterval": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WorkflowResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CreatedAt": "time.Time",
          "Dependencies": "map[string][]string",
          "Description": "string",
          "ErrorHandling": "string",
          "ID": "string",
          "Metadata": "map[string]string",
          "ModifiedAt": "time.Time",
          "Name": "string",
          "Owner": "string",
          "Public": "bool",
          "RetryPolicy": "*RetryPolicy",
          "Tasks": "[]WorkflowTask"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WorkflowRunRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Description": "string",
          "GlobalArgs": "map[string]any",
          "Priority": "int",
          "RunLabel": "string",
          "TaskArgs": "map[string]map[string]any"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WorkflowRunResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Message": "string",
          "RunID": "string",
          "StartedAt": "time.Time",
          "Status": "string",
          "WorkflowID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WorkflowStatusResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CompletedAt": "time.Time",
          "Error": "string",
          "Progress": "WorkflowProgressInfo",
          "RunID": "string",
          "StartedAt": "time.Time",
          "Status": "string",
          "TaskStatus": "map[string]TaskStatusInfo",
          "WorkflowID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskStatusInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CompletedAt": "time.Time",
          "Error": "string",
          "Result": "interface{}",
          "StartedAt": "time.Time",
          "Status": "string",
          "TaskID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WorkflowProgressInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Completed": "int",
          "Failed": "int",
          "Pending": "int",
          "PercentDone": "float64",
          "Running": "int",
          "TotalTasks": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskGroupCreateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Concurrency": "int",
          "Description": "string",
          "Name": "string",
          "Public": "bool",
          "RetryPolicy": "*RetryPolicy",
          "Tasks": "[]TaskRequest"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskGroupResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Concurrency": "int",
          "CreatedAt": "time.Time",
          "Description": "string",
          "ID": "string",
          "ModifiedAt": "time.Time",
          "Name": "string",
          "Owner": "string",
          "Public": "bool",
          "RetryPolicy": "*RetryPolicy",
          "Tasks": "[]TaskRequest"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskGroupUpdateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Concurrency": "int",
          "Description": "string",
          "Name": "string",
          "Public": "*bool",
          "RetryPolicy": "*RetryPolicy",
          "Tasks": "[]TaskRequest"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskGroupList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "HasNextPage": "bool",
          "Limit": "int",
          "Offset": "int",
          "TaskGroups": "[]TaskGroupResponse",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ListTaskGroupsOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FilterScope": "string",
          "Marker": "string",
          "PerPage": "int",
          "Search": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskGroupRunRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Description": "string",
          "Priority": "int",
          "RunLabel": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskGroupRunResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Message": "string",
          "RunID": "string",
          "StartedAt": "time.Time",
          "Status": "string",
          "TaskGroupID": "string",
          "TaskIDs": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskGroupStatusResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CompletedAt": "time.Time",
          "Error": "string",
          "Progress": "TaskGroupProgressInfo",
          "RunID": "string",
          "StartedAt": "time.Time",
          "Status": "string",
          "TaskGroupID": "string",
          "TaskStatus": "map[string]TaskStatusInfo"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskGroupProgressInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Completed": "int",
          "Failed": "int",
          "Pending": "int",
          "PercentDone": "float64",
          "Running": "int",
          "TotalTasks": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DependencyGraphNode",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Condition": "string",
          "Dependencies": "[]string",
          "ErrorHandler": "*ErrorHandler",
          "RetryPolicy": "*RetryPolicy",
          "Task": "TaskRequest"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ErrorHandler",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FallbackID": "string",
          "RetryPolicy": "*RetryPolicy",
          "Strategy": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DependencyGraphRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Description": "string",
          "ErrorPolicy": "string",
          "Nodes": "map[string]DependencyGraphNode",
          "RunLabel": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DependencyGraphResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Message": "string",
          "RunID": "string",
          "StartedAt": "time.Time",
          "Status": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DependencyGraphStatusResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CompletedAt": "time.Time",
          "Error": "string",
          "NodeStatus": "map[string]TaskStatusInfo",
          "Progress": "DependencyGraphProgressInfo",
          "RunID": "string",
          "StartedAt": "time.Time",
          "Status": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "DependencyGraphProgressInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Completed": "int",
          "Failed": "int",
          "Pending": "int",
          "PercentDone": "float64",
          "Running": "int",
          "Skipped": "int",
          "TotalNodes": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Args": "[]any",
          "EndpointID": "string",
          "ExecMode": "string",
          "FunctionID": "string",
          "Kwargs": "map[string]any",
          "Priority": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Message": "string",
          "Status": "string",
          "TaskID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "BatchTaskRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Tasks": "[]TaskRequest"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "BatchTaskResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Message": "string",
          "Status": "string",
          "TaskIDs": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskStatus",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CompletedAt": "time.Time",
          "Exception": "string",
          "Result": "interface{}",
          "Status": "string",
          "TaskID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "BatchTaskStatus",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Completed": "[]string",
          "Failed": "[]string",
          "Message": "string",
          "Pending": "[]string",
          "Tasks": "map[string]TaskStatus"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskListOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "EndpointID": "string",
          "FunctionID": "string",
          "Marker": "string",
          "PerPage": "int",
          "Status": "string"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "TaskList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "HasNextPage": "bool",
          "Limit": "int",
          "Offset": "int",
          "Tasks": "[]string",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/compute/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "ClientOption",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/services/compute/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WithAccessToken",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/compute/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WithBaseURL",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/compute/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WithAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "auth.Authorizer"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/compute/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WithCoreOption",
      "type": "func",
      "details": {
        "params": [
          "core.ClientOption"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/compute/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WithHTTPDebugging",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/compute/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/compute",
      "name": "WithHTTPTracing",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/compute/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Concurrency": "int"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchRunFlowsRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Options": "*BatchOptions",
          "Requests": "[]*RunRequest"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchRunFlowsResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Responses": "[]*BatchRunFlowResult"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchRunFlowResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Error": "error",
          "Index": "int",
          "Response": "*RunResponse"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchRunFlows",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*BatchRunFlowsRequest"
        ],
        "results": [
          "*BatchRunFlowsResponse"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchActionRoleRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Options": "*BatchOptions",
          "ProviderID": "string",
          "RoleIDs": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchActionRoleResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Responses": "[]*BatchActionRoleResult"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchActionRoleResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Error": "error",
          "Index": "int",
          "Role": "*ActionRole"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchGetActionRoles",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*BatchActionRoleRequest"
        ],
        "results": [
          "*BatchActionRoleResponse"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchRunsRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Options": "*BatchOptions",
          "RunIDs": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchRunsResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Responses": "[]*BatchRunResult"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchRunResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Error": "error",
          "Index": "int",
          "Run": "*RunResponse"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchGetRuns",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*BatchRunsRequest"
        ],
        "results": [
          "*BatchRunsResponse"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchCancelRunsRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Options": "*BatchOptions",
          "RunIDs": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchCancelRunsResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Responses": "[]*BatchCancelRunResult"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchCancelRunResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Error": "error",
          "Index": "int",
          "RunID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchCancelRuns",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*BatchCancelRunsRequest"
        ],
        "results": [
          "*BatchCancelRunsResponse"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchFlowsRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FlowIDs": "[]string",
          "Options": "*BatchOptions"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchFlowsResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Responses": "[]*BatchFlowResult"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchFlowResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Error": "error",
          "Flow": "*Flow",
          "Index": "int"
        },
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "BatchGetFlows",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*BatchFlowsRequest"
        ],
        "results": [
          "*BatchFlowsResponse"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "DefaultBaseURL",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "FlowsScope",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Client",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*core.Client"
        },
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "NewClient",
      "type": "func",
      "details": {
        "params": [
          "...ClientOption"
        ],
        "results": [
          "*Client",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListFlows",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListFlowsOptions"
        ],
        "results": [
          "*FlowList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "GetFlow",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*Flow",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "CreateFlow",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*FlowCreateRequest"
        ],
        "results": [
          "*Flow",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "UpdateFlow",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*FlowUpdateRequest"
        ],
        "results": [
          "*Flow",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "DeleteFlow",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "RunFlow",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*RunRequest"
        ],
        "results": [
          "*RunResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListRuns",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListRunsOptions"
        ],
        "results": [
          "*RunList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "GetRun",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*RunResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "CancelRun",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "UpdateRun",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*RunUpdateRequest"
        ],
        "results": [
          "*RunResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "GetRunLogs",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "int",
          "int"
        ],
        "results": [
          "*RunLogList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListActionProviders",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListActionProvidersOptions"
        ],
        "results": [
          "*ActionProviderList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "GetActionProvider",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*ActionProvider",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListActionRoles",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "int",
          "int"
        ],
        "results": [
          "*ActionRoleList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "GetActionRole",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string"
        ],
        "results": [
          "*ActionRole",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "GetFlowsIterator",
      "type": "func",
      "details": {
        "params": [
          "*ListFlowsOptions"
        ],
        "results": [
          "*FlowIterator"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "GetRunsIterator",
      "type": "func",
      "details": {
        "params": [
          "*ListRunsOptions"
        ],
        "results": [
          "*RunIterator"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "GetActionProvidersIterator",
      "type": "func",
      "details": {
        "params": [
          "*ListActionProvidersOptions"
        ],
        "results": [
          "*ActionProviderIterator"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "GetActionRolesIterator",
      "type": "func",
      "details": {
        "params": [
          "string",
          "int"
        ],
        "results": [
          "*ActionRoleIterator"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "GetRunLogsIterator",
      "type": "func",
      "details": {
        "params": [
          "string",
          "int"
        ],
        "results": [
          "*RunLogIterator"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "WaitForRun",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "time.Duration"
        ],
        "results": [
          "*RunResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListAllFlows",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListFlowsOptions"
        ],
        "results": [
          "[]Flow",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListAllRuns",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListRunsOptions"
        ],
        "results": [
          "[]RunResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListAllActionProviders",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListActionProvidersOptions"
        ],
        "results": [
          "[]ActionProvider",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListAllActionRoles",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "[]ActionRole",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListAllRunLogs",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "[]RunLogEntry",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/flows/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ErrorResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Code": "string",
          "Message": "string",
          "RequestID": "string",
          "Resource": "string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*ErrorResponse",
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "FlowNotFoundError",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FlowID": "string",
          "embedded": "*ErrorResponse"
        },
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*FlowNotFoundError",
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "RunNotFoundError",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "RunID": "string",
          "embedded": "*ErrorResponse"
        },
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*RunNotFoundError",
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ActionProviderNotFoundError",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ProviderID": "string",
          "embedded": "*ErrorResponse"
        },
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*ActionProviderNotFoundError",
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ActionRoleNotFoundError",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ProviderID": "string",
          "RoleID": "string",
          "embedded": "*ErrorResponse"
        },
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*ActionRoleNotFoundError",
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ForbiddenError",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "embedded": "*ErrorResponse"
        },
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*ForbiddenError",
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ValidationError",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "embedded": "*ErrorResponse"
        },
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*ValidationError",
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ParseErrorResponse",
      "type": "func",
      "details": {
        "params": [
          "[]byte",
          "int",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "IsFlowNotFoundError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "IsRunNotFoundError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "IsActionProviderNotFoundError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "IsActionRoleNotFoundError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "IsForbiddenError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "IsValidationError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "FlowIterator",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "NewFlowIterator",
      "type": "func",
      "details": {
        "params": [
          "*Client",
          "*ListFlowsOptions"
        ],
        "results": [
          "*FlowIterator"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Next",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "bool"
        ],
        "receiver": "*FlowIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Flow",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*Flow"
        ],
        "receiver": "*FlowIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Err",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "error"
        ],
        "receiver": "*FlowIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "RunIterator",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "NewRunIterator",
      "type": "func",
      "details": {
        "params": [
          "*Client",
          "*ListRunsOptions"
        ],
        "results": [
          "*RunIterator"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Next",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "bool"
        ],
        "receiver": "*RunIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Run",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*RunResponse"
        ],
        "receiver": "*RunIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Err",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "error"
        ],
        "receiver": "*RunIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ActionProviderIterator",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "NewActionProviderIterator",
      "type": "func",
      "details": {
        "params": [
          "*Client",
          "*ListActionProvidersOptions"
        ],
        "results": [
          "*ActionProviderIterator"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Next",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "bool"
        ],
        "receiver": "*ActionProviderIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ActionProvider",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*ActionProvider"
        ],
        "receiver": "*ActionProviderIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Err",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "error"
        ],
        "receiver": "*ActionProviderIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "RunLogIterator",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "NewRunLogIterator",
      "type": "func",
      "details": {
        "params": [
          "*Client",
          "string",
          "int"
        ],
        "results": [
          "*RunLogIterator"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Next",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "bool"
        ],
        "receiver": "*RunLogIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "LogEntry",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*RunLogEntry"
        ],
        "receiver": "*RunLogIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Err",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "error"
        ],
        "receiver": "*RunLogIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ActionRoleIterator",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "NewActionRoleIterator",
      "type": "func",
      "details": {
        "params": [
          "*Client",
          "string",
          "int"
        ],
        "results": [
          "*ActionRoleIterator"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Next",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "bool"
        ],
        "receiver": "*ActionRoleIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ActionRole",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*ActionRole"
        ],
        "receiver": "*ActionRoleIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Err",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "error"
        ],
        "receiver": "*ActionRoleIterator",
        "is_exported": true,
        "file": "pkg/services/flows/iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "Flow",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AdminOnly": "bool",
          "CreatedAt": "time.Time",
          "Definition": "map[string]interface{}",
          "Description": "string",
          "FlowOwner": "string",
          "ID": "string",
          "InputSchema": "map[string]interface{}",
          "Keywords": "[]string",
          "Managed": "bool",
          "Public": "bool",
          "RunAsApprover": "bool",
          "RunCount": "int",
          "RunsRequired": "bool",
          "SubsID": "string",
          "Title": "string",
          "UpdatedAt": "time.Time",
          "UserID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "FlowList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Flows": "[]Flow",
          "HadMore": "bool",
          "Limit": "int",
          "Offset": "int",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "FlowCreateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AdminOnly": "bool",
          "Definition": "map[string]interface{}",
          "Description": "string",
          "InputSchema": "map[string]interface{}",
          "Keywords": "[]string",
          "Managed": "bool",
          "Public": "bool",
          "RunAsApprover": "bool",
          "RunsRequired": "bool",
          "Title": "string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "FlowUpdateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AdminOnly": "*bool",
          "Definition": "map[string]interface{}",
          "Description": "string",
          "InputSchema": "map[string]interface{}",
          "Keywords": "[]string",
          "Managed": "*bool",
          "Public": "*bool",
          "RunAsApprover": "*bool",
          "RunsRequired": "*bool",
          "Title": "string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListFlowsOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FilterOwner": "string",
          "FilterPublic": "bool",
          "FilterRoles": "string",
          "Limit": "int",
          "Marker": "string",
          "Offset": "int",
          "OrderBy": "string",
          "PerPage": "int",
          "Q": "string",
          "RolesOnly": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListRunsOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FlowID": "string",
          "Label": "string",
          "Limit": "int",
          "Marker": "string",
          "Offset": "int",
          "OrderBy": "string",
          "PerPage": "int",
          "Q": "string",
          "RoleType": "string",
          "Status": "string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "RunRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FlowID": "string",
          "FlowScope": "string",
          "FlowTitle": "string",
          "Input": "map[string]interface{}",
          "Label": "string",
          "ManageBy": "string",
          "MonitorBy": "string",
          "RunManagers": "[]string",
          "RunManagersRW": "bool",
          "RunMonitors": "[]string",
          "Tags": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "RunResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CompletedAt": "time.Time",
          "CreatedAt": "time.Time",
          "FlowID": "string",
          "FlowScope": "string",
          "FlowTitle": "string",
          "Input": "map[string]interface{}",
          "Label": "string",
          "Output": "map[string]interface{}",
          "RunID": "string",
          "RunManagers": "[]string",
          "RunMonitors": "[]string",
          "RunOwner": "string",
          "StartedAt": "time.Time",
          "Status": "string",
          "Tags": "[]string",
          "UserID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "RunList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "HadMore": "bool",
          "Limit": "int",
          "Offset": "int",
          "Runs": "[]RunResponse",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "RunUpdateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Label": "string",
          "RunManagers": "[]string",
          "RunMonitors": "[]string",
          "Tags": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "RunLogEntry",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Code": "string",
          "CreatedAt": "time.Time",
          "Description": "string",
          "Details": "map[string]interface{}",
          "RunID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "RunLogList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Entries": "[]RunLogEntry",
          "HadMore": "bool",
          "Limit": "int",
          "Offset": "int",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ActionProvider",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CreatedAt": "time.Time",
          "Description": "string",
          "DisplayName": "string",
          "Globus": "bool",
          "ID": "string",
          "Owner": "string",
          "Type": "string",
          "UpdatedAt": "time.Time",
          "Visible": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ActionProviderList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ActionProviders": "[]ActionProvider",
          "HadMore": "bool",
          "Limit": "int",
          "Offset": "int",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ActionRole",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ActionFields": "map[string]interface{}",
          "Description": "string",
          "ID": "string",
          "InputSchema": "map[string]interface{}",
          "Name": "string",
          "Visible": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ActionRoleList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ActionRoles": "[]ActionRole",
          "HadMore": "bool",
          "Limit": "int",
          "Offset": "int",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ListActionProvidersOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FilterGlobus": "bool",
          "FilterOwner": "string",
          "FilterType": "string",
          "Limit": "int",
          "Marker": "string",
          "Offset": "int",
          "OrderBy": "string",
          "PerPage": "int",
          "Q": "string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "RunMutableFields",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Label": "string",
          "RunManagers": "[]string",
          "RunMonitors": "[]string",
          "Tags": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/flows/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "ClientOption",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/services/flows/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "WithAccessToken",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "WithBaseURL",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "WithAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "auth.Authorizer"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "WithCoreOption",
      "type": "func",
      "details": {
        "params": [
          "core.ClientOption"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "WithHTTPDebugging",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/flows",
      "name": "WithHTTPTracing",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/flows/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "DefaultBaseURL",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "GroupsScope",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "Client",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*core.Client"
        },
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "Option",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "WithAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "auth.Authorizer"
        ],
        "results": [
          "Option"
        ],
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "WithHTTPDebugging",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "Option"
        ],
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "WithHTTPTracing",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "Option"
        ],
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "WithLogger",
      "type": "func",
      "details": {
        "params": [
          "core.Logger"
        ],
        "results": [
          "Option"
        ],
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "WithCoreOptions",
      "type": "func",
      "details": {
        "params": [
          "...core.ClientOption"
        ],
        "results": [
          "Option"
        ],
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "NewClient",
      "type": "func",
      "details": {
        "params": [
          "...Option"
        ],
        "results": [
          "*Client",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "ListGroups",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListGroupsOptions"
        ],
        "results": [
          "*GroupList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "GetGroup",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*Group",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "CreateGroup",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*GroupCreate"
        ],
        "results": [
          "*Group",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "UpdateGroup",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*GroupUpdate"
        ],
        "results": [
          "*Group",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "DeleteGroup",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "ListMembers",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*ListMembersOptions"
        ],
        "results": [
          "*MemberList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "AddMember",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "RemoveMember",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "UpdateMemberRole",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "ListRoles",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*RoleList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "GetRole",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string"
        ],
        "results": [
          "*Role",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "CreateRole",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*RoleCreate"
        ],
        "results": [
          "*Role",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "UpdateRole",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "*RoleUpdate"
        ],
        "results": [
          "*Role",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "DeleteRole",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "ListMembersLowLevel",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*ListMembersOptions"
        ],
        "results": [
          "*MemberList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/membership.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "AddMemberLowLevel",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/membership.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "RemoveMemberLowLevel",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/membership.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "UpdateMemberRoleLowLevel",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/groups/membership.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "Group",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Created": "time.Time",
          "DATA_TYPE": "string",
          "Description": "string",
          "EnforceProvisionRules": "bool",
          "ID": "string",
          "IdentityID": "string",
          "IsGroupAdmin": "bool",
          "IsMember": "bool",
          "LastUpdated": "time.Time",
          "MemberCount": "int",
          "Name": "string",
          "ParentID": "string",
          "Policies": "map[string]interface{}",
          "ProvisionRules": "[]ProvisionRule",
          "PublicGroup": "bool",
          "RequiresSignAgreement": "bool",
          "SignAgreementMessage": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "ProvisionRule",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DATA_TYPE": "string",
          "Expression": "string",
          "ID": "string",
          "Label": "string",
          "MappedRoleID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "GroupCreate",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DATA_TYPE": "string",
          "Description": "string",
          "EnforceProvisionRules": "bool",
          "Name": "string",
          "ParentID": "string",
          "Policies": "map[string]interface{}",
          "PublicGroup": "bool",
          "RequiresSignAgreement": "bool",
          "SignAgreementMessage": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "GroupUpdate",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DATA_TYPE": "string",
          "Description": "string",
          "EnforceProvisionRules": "*bool",
          "Name": "string",
          "ParentID": "string",
          "Policies": "map[string]interface{}",
          "PublicGroup": "*bool",
          "RequiresSignAgreement": "*bool",
          "SignAgreementMessage": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "GroupList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Groups": "[]Group",
          "HasNextPage": "bool",
          "NextPageToken": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "ListGroupsOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ForUserID": "string",
          "IncludeGroupMembership": "bool",
          "IncludeIdentitySet": "bool",
          "MyGroups": "bool",
          "PageSize": "int",
          "PageToken": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "Member",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DATA_TYPE": "string",
          "Email": "string",
          "IdentityID": "string",
          "JoinedDate": "time.Time",
          "LastUpdateDate": "time.Time",
          "Name": "string",
          "Organization": "string",
          "ProvisionedByRule": "string",
          "Role": "Role",
          "RoleID": "string",
          "Status": "string",
          "Username": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "Role",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DATA_TYPE": "string",
          "Description": "string",
          "ID": "string",
          "Name": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "RoleCreate",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DATA_TYPE": "string",
          "Description": "string",
          "Name": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "RoleUpdate",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DATA_TYPE": "string",
          "Description": "string",
          "Name": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "RoleList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Roles": "[]Role"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "MemberList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "HasNextPage": "bool",
          "Members": "[]Member",
          "NextPageToken": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "ListMembersOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "PageSize": "int",
          "PageToken": "string",
          "RoleID": "string",
          "Status": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "MemberInvite",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Email": "string",
          "Message": "string",
          "RoleID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "MemberInviteResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Accepted": "bool",
          "Email": "string",
          "Message": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "ProvisionRuleCreate",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Expression": "string",
          "Label": "string",
          "MappedRoleID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "ProvisionRuleUpdate",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Expression": "string",
          "Label": "string",
          "MappedRoleID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/groups",
      "name": "GroupMembership",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "IsMember": "bool",
          "RoleID": "string",
          "Status": "string"
        },
        "is_exported": true,
        "file": "pkg/services/groups/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "QueryType",
      "type": "type",
      "details": {
        "kind": "alias",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "QueryTypeSimple",
      "type": "const",
      "details": {
        "type": "QueryType",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "QueryTypeMatch",
      "type": "const",
      "details": {
        "type": "QueryType",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "QueryTypeTerm",
      "type": "const",
      "details": {
        "type": "QueryType",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "QueryTypeRange",
      "type": "const",
      "details": {
        "type": "QueryType",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "QueryTypeBool",
      "type": "const",
      "details": {
        "type": "QueryType",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "QueryTypePrefix",
      "type": "const",
      "details": {
        "type": "QueryType",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "QueryTypeWildcard",
      "type": "const",
      "details": {
        "type": "QueryType",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "QueryTypeExists",
      "type": "const",
      "details": {
        "type": "QueryType",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "QueryTypeGeo",
      "type": "const",
      "details": {
        "type": "QueryType",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "RangeOperator",
      "type": "type",
      "details": {
        "kind": "alias",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "RangeGT",
      "type": "const",
      "details": {
        "type": "RangeOperator",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "RangeGTE",
      "type": "const",
      "details": {
        "type": "RangeOperator",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "RangeLT",
      "type": "const",
      "details": {
        "type": "RangeOperator",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "RangeLTE",
      "type": "const",
      "details": {
        "type": "RangeOperator",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "BoolOperator",
      "type": "type",
      "details": {
        "kind": "alias",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "BoolMust",
      "type": "const",
      "details": {
        "type": "BoolOperator",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "BoolMustNot",
      "type": "const",
      "details": {
        "type": "BoolOperator",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "BoolShould",
      "type": "const",
      "details": {
        "type": "BoolOperator",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Query",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "ToJSON": {
            "params": [],
            "results": [
              "map[string]interface{}"
            ]
          },
          "Type": {
            "params": [],
            "results": [
              "QueryType"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SimpleQuery",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Q": "string"
        },
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Type",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "QueryType"
        ],
        "receiver": "*SimpleQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ToJSON",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*SimpleQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "MatchQuery",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Field": "string",
          "Value": "interface{}"
        },
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Type",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "QueryType"
        ],
        "receiver": "*MatchQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ToJSON",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*MatchQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "TermQuery",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Field": "string",
          "Value": "interface{}"
        },
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Type",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "QueryType"
        ],
        "receiver": "*TermQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ToJSON",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*TermQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "RangeQuery",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Field": "string",
          "Format": "string",
          "GT": "interface{}",
          "GTE": "interface{}",
          "LT": "interface{}",
          "LTE": "interface{}",
          "Relation": "string",
          "TimeZone": "string"
        },
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Type",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "QueryType"
        ],
        "receiver": "*RangeQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ToJSON",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*RangeQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "BoolQuery",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "MinimumShouldMatch": "int",
          "Must": "[]Query",
          "MustNot": "[]Query",
          "Should": "[]Query"
        },
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Type",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "QueryType"
        ],
        "receiver": "*BoolQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ToJSON",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*BoolQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ExistsQuery",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Field": "string"
        },
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Type",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "QueryType"
        ],
        "receiver": "*ExistsQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ToJSON",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*ExistsQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "PrefixQuery",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Field": "string",
          "Prefix": "string"
        },
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Type",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "QueryType"
        ],
        "receiver": "*PrefixQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ToJSON",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*PrefixQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WildcardQuery",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Field": "string",
          "Wildcard": "string"
        },
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Type",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "QueryType"
        ],
        "receiver": "*WildcardQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ToJSON",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*WildcardQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "GeoDistanceQuery",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Distance": "string",
          "Field": "string",
          "Lat": "float64",
          "Lon": "float64"
        },
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Type",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "QueryType"
        ],
        "receiver": "*GeoDistanceQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ToJSON",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "map[string]interface{}"
        ],
        "receiver": "*GeoDistanceQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "StructuredSearchRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Extra": "map[string]interface{}",
          "IndexID": "string",
          "Options": "*SearchOptions",
          "Query": "Query"
        },
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "MarshalJSON",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "[]byte",
          "error"
        ],
        "receiver": "*StructuredSearchRequest",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewSimpleQuery",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*SimpleQuery"
        ],
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewMatchQuery",
      "type": "func",
      "details": {
        "params": [
          "string",
          "interface{}"
        ],
        "results": [
          "*MatchQuery"
        ],
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewTermQuery",
      "type": "func",
      "details": {
        "params": [
          "string",
          "interface{}"
        ],
        "results": [
          "*TermQuery"
        ],
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewRangeQuery",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*RangeQuery"
        ],
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewBoolQuery",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*BoolQuery"
        ],
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "AddMust",
      "type": "func",
      "details": {
        "params": [
          "Query"
        ],
        "results": [
          "*BoolQuery"
        ],
        "receiver": "*BoolQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "AddMustNot",
      "type": "func",
      "details": {
        "params": [
          "Query"
        ],
        "results": [
          "*BoolQuery"
        ],
        "receiver": "*BoolQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "AddShould",
      "type": "func",
      "details": {
        "params": [
          "Query"
        ],
        "results": [
          "*BoolQuery"
        ],
        "receiver": "*BoolQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SetMinimumShouldMatch",
      "type": "func",
      "details": {
        "params": [
          "int"
        ],
        "results": [
          "*BoolQuery"
        ],
        "receiver": "*BoolQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewExistsQuery",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*ExistsQuery"
        ],
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewPrefixQuery",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string"
        ],
        "results": [
          "*PrefixQuery"
        ],
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewWildcardQuery",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string"
        ],
        "results": [
          "*WildcardQuery"
        ],
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewGeoDistanceQuery",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string",
          "float64",
          "float64"
        ],
        "results": [
          "*GeoDistanceQuery"
        ],
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithGT",
      "type": "func",
      "details": {
        "params": [
          "interface{}"
        ],
        "results": [
          "*RangeQuery"
        ],
        "receiver": "*RangeQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithGTE",
      "type": "func",
      "details": {
        "params": [
          "interface{}"
        ],
        "results": [
          "*RangeQuery"
        ],
        "receiver": "*RangeQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithLT",
      "type": "func",
      "details": {
        "params": [
          "interface{}"
        ],
        "results": [
          "*RangeQuery"
        ],
        "receiver": "*RangeQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithLTE",
      "type": "func",
      "details": {
        "params": [
          "interface{}"
        ],
        "results": [
          "*RangeQuery"
        ],
        "receiver": "*RangeQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithFormat",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*RangeQuery"
        ],
        "receiver": "*RangeQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithTimeZone",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*RangeQuery"
        ],
        "receiver": "*RangeQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithRelation",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*RangeQuery"
        ],
        "receiver": "*RangeQuery",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "QueryParser",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ParseQuery",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "Query",
          "error"
        ],
        "receiver": "*QueryParser",
        "is_exported": true,
        "file": "pkg/services/search/advanced_query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "BatchIngestOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BatchSize": "int",
          "BatchTimeout": "time.Duration",
          "MaxConcurrent": "int",
          "ProgressCallback": "func",
          "TaskIDPrefix": "string"
        },
        "is_exported": true,
        "file": "pkg/services/search/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "DefaultBatchIngestOptions",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*BatchIngestOptions"
        ],
        "is_exported": true,
        "file": "pkg/services/search/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "BatchIngestResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Errors": "[]error",
          "FailedDocuments": "int",
          "SuccessDocuments": "int",
          "TaskIDs": "[]string",
          "TaskResults": "map[string]*IngestResponse",
          "TotalDocuments": "int"
        },
        "is_exported": true,
        "file": "pkg/services/search/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "BatchIngestDocuments",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "[]SearchDocument",
          "*BatchIngestOptions"
        ],
        "results": [
          "*BatchIngestResult",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "BatchDeleteOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BatchSize": "int",
          "BatchTimeout": "time.Duration",
          "MaxConcurrent": "int",
          "ProgressCallback": "func",
          "TaskIDPrefix": "string"
        },
        "is_exported": true,
        "file": "pkg/services/search/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "DefaultBatchDeleteOptions",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*BatchDeleteOptions"
        ],
        "is_exported": true,
        "file": "pkg/services/search/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "BatchDeleteResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Errors": "[]error",
          "FailedSubjects": "int",
          "SuccessSubjects": "int",
          "TaskIDs": "[]string",
          "TaskResults": "map[string]*DeleteDocumentsResponse",
          "TotalSubjects": "int"
        },
        "is_exported": true,
        "file": "pkg/services/search/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "BatchDeleteDocuments",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "[]string",
          "*BatchDeleteOptions"
        ],
        "results": [
          "*BatchDeleteResult",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WaitForTasks",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "[]string",
          "time.Duration"
        ],
        "results": [
          "[]*TaskStatusResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/batch.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "DefaultBaseURL",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SearchScope",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Client",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*core.Client"
        },
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewClient",
      "type": "func",
      "details": {
        "params": [
          "...ClientOption"
        ],
        "results": [
          "*Client",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ListIndexes",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListIndexesOptions"
        ],
        "results": [
          "*IndexList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "GetIndex",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*Index",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "CreateIndex",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*IndexCreateRequest"
        ],
        "results": [
          "*Index",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "UpdateIndex",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*IndexUpdateRequest"
        ],
        "results": [
          "*Index",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "DeleteIndex",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IngestDocuments",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*IngestRequest"
        ],
        "results": [
          "*IngestResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Search",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*SearchRequest"
        ],
        "results": [
          "*SearchResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "StructuredSearch",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*StructuredSearchRequest"
        ],
        "results": [
          "*SearchResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "DeleteDocuments",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*DeleteDocumentsRequest"
        ],
        "results": [
          "*DeleteDocumentsResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "GetTaskStatus",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*TaskStatusResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SearchIterator",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewSearchIterator",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*SearchRequest",
          "int"
        ],
        "results": [
          "*SearchIterator"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewStructuredSearchIterator",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*StructuredSearchRequest",
          "int"
        ],
        "results": [
          "*SearchIterator"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Next",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*SearchIterator",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Response",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*SearchResponse"
        ],
        "receiver": "*SearchIterator",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "error"
        ],
        "receiver": "*SearchIterator",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SearchAll",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*SearchRequest",
          "int"
        ],
        "results": [
          "[]SearchResult",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "StructuredSearchAll",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*StructuredSearchRequest",
          "int"
        ],
        "results": [
          "[]SearchResult",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/search/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ErrorCodeIndexNotFound",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ErrorCodePermissionDenied",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ErrorCodeInvalidQuery",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ErrorCodeInvalidIndexDefinition",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ErrorCodeTaskNotFound",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ErrorCodeIndexExists",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ErrorCodeRateLimit",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SearchError",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Cause": "error",
          "Code": "string",
          "Message": "string",
          "RequestID": "string",
          "Status": "int"
        },
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*SearchError",
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Unwrap",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "error"
        ],
        "receiver": "*SearchError",
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IsSearchError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "AsSearchError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "*SearchError",
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IsIndexNotFoundError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IsPermissionDeniedError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IsInvalidQueryError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IsTaskNotFoundError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IsIndexExistsError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IsRateLimitError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/search/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Index",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CreatedAt": "time.Time",
          "CreatedBy": "string",
          "DefinitionDocument": "map[string]interface{}",
          "Description": "string",
          "DisplayName": "string",
          "ID": "string",
          "IsActive": "bool",
          "IsMonitored": "bool",
          "IsPublic": "bool",
          "MaxSize": "int64",
          "MonitoringFrequency": "int",
          "UpdatedAt": "time.Time"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IndexList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "HadErrors": "bool",
          "HasMore": "bool",
          "Indexes": "[]Index",
          "Marker": "string",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IndexCreateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DefinitionDocument": "map[string]interface{}",
          "Description": "string",
          "DisplayName": "string",
          "IsMonitored": "bool",
          "MonitoringFrequency": "int"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IndexUpdateRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DefinitionDocument": "map[string]interface{}",
          "Description": "string",
          "DisplayName": "string",
          "IsActive": "bool",
          "IsMonitored": "bool",
          "MonitoringFrequency": "int"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ListIndexesOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ByPath": "string",
          "CreatedBy": "string",
          "IsActive": "bool",
          "IsPublic": "bool",
          "Limit": "int",
          "Marker": "string",
          "Offset": "int",
          "PerPage": "int"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SearchDocument",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Content": "map[string]interface{}",
          "CreatedAt": "time.Time",
          "DeletedAt": "time.Time",
          "GMETA": "map[string]interface{}",
          "IndexedAt": "time.Time",
          "Subject": "string",
          "UpdatedAt": "time.Time",
          "Version": "string",
          "VisibleTo": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IngestRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Documents": "[]SearchDocument",
          "IndexID": "string",
          "Task": "*IngestTask"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IngestTask",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CompletedAt": "string",
          "CreatedAt": "string",
          "DetailLocation": "string",
          "ProcessingState": "string",
          "TaskID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "IngestResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Failed": "int",
          "Succeeded": "int",
          "Task": "IngestTask",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SearchOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ByPath": "string",
          "FacetSize": "int",
          "Facets": "[]string",
          "Filter": "string",
          "IncludeAllContent": "bool",
          "Limit": "int",
          "Offset": "int",
          "PageSize": "int",
          "PageToken": "string",
          "Sort": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SearchRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "IndexID": "string",
          "Options": "*SearchOptions",
          "Query": "string"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "FacetValue",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Count": "int",
          "Value": "string"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "Facet",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Name": "string",
          "Type": "string",
          "Values": "[]FacetValue"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SearchResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Content": "map[string]interface{}",
          "Highlight": "map[string][]string",
          "Score": "float64",
          "Subject": "string"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SearchResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Count": "int",
          "Facets": "[]Facet",
          "HadErrors": "bool",
          "HasMore": "bool",
          "PageToken": "string",
          "Results": "[]SearchResult",
          "Subjects": "[]string",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "DeleteDocumentsRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "IndexID": "string",
          "Subjects": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "DeleteDocumentsResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Failed": "int",
          "Succeeded": "int",
          "Task": "IngestTask",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "TaskStatusResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CompletedAt": "string",
          "CreatedAt": "string",
          "DetailLocation": "string",
          "ErrorCount": "int",
          "FailedDocuments": "int",
          "FailedSubjects": "[]string",
          "State": "string",
          "SuccessDocuments": "int",
          "TaskID": "string",
          "TotalDocuments": "int"
        },
        "is_exported": true,
        "file": "pkg/services/search/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "ClientOption",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/services/search/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithAccessToken",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/search/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithBaseURL",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/search/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "auth.Authorizer"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/search/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithCoreOption",
      "type": "func",
      "details": {
        "params": [
          "core.ClientOption"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/search/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithHTTPDebugging",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/search/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "WithHTTPTracing",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/search/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "SearchQuery",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Advanced": "bool",
          "BoostIndices": "[]string",
          "ExcludeFields": "[]string",
          "Facets": "[]string",
          "Filters": "[]map[string]interface{}",
          "IncludeFields": "[]string",
          "IndexMapping": "map[string]bool",
          "Limit": "int",
          "Offset": "int",
          "Q": "string",
          "Sort": "[]map[string]string",
          "Terms": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/search/query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/search",
      "name": "NewBasicQuery",
      "type": "func",
      "details": {
        "params": [
          "string",
          "int"
        ],
        "results": [
          "*SearchQuery"
        ],
        "is_exported": true,
        "file": "pkg/services/search/query.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "DefaultBaseURL",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "TimersScope",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "Client",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*core.Client"
        },
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "NewClient",
      "type": "func",
      "details": {
        "params": [
          "...ClientOption"
        ],
        "results": [
          "*Client",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "CreateTimer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*CreateTimerRequest"
        ],
        "results": [
          "*Timer",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "GetTimer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*Timer",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "UpdateTimer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*UpdateTimerRequest"
        ],
        "results": [
          "*Timer",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "DeleteTimer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "ListTimers",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListTimersOptions"
        ],
        "results": [
          "*TimerList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "PauseTimer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*Timer",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "ResumeTimer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*Timer",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "RunTimer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*TimerRun",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "ListRuns",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*ListRunsOptions"
        ],
        "results": [
          "*TimerRunList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "GetRun",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string"
        ],
        "results": [
          "*TimerRun",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "GetCurrentUser",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "*CurrentUserInfo",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "CreateOnceTimer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "time.Time",
          "Callback",
          "map[string]interface{}"
        ],
        "results": [
          "*Timer",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "CreateRecurringTimer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "time.Time",
          "string",
          "*time.Time",
          "Callback",
          "map[string]interface{}"
        ],
        "results": [
          "*Timer",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "CreateCronTimer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "string",
          "*time.Time",
          "Callback",
          "map[string]interface{}"
        ],
        "results": [
          "*Timer",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "CreateFlowCallback",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string",
          "map[string]interface{}"
        ],
        "results": [
          "Callback"
        ],
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "CreateWebCallback",
      "type": "func",
      "details": {
        "params": [
          "string",
          "string",
          "map[string]string",
          "*string"
        ],
        "results": [
          "Callback"
        ],
        "is_exported": true,
        "file": "pkg/services/timers/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "Timer",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Callback": "*Callback",
          "CreateTime": "time.Time",
          "Data": "map[string]interface{}",
          "ID": "string",
          "LastRun": "*time.Time",
          "LastRunStatus": "string",
          "LastUpdate": "time.Time",
          "Name": "string",
          "NextDue": "*time.Time",
          "Owner": "string",
          "Schedule": "*Schedule",
          "Status": "string"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "Schedule",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CronExpression": "*string",
          "EndTime": "*time.Time",
          "Interval": "*string",
          "StartTime": "*time.Time",
          "Timezone": "*string",
          "Type": "string"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "Callback",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Body": "*string",
          "FlowID": "*string",
          "FlowInput": "map[string]interface{}",
          "FlowLabel": "*string",
          "Headers": "map[string]string",
          "Method": "*string",
          "Type": "string",
          "URL": "*string"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "TimerList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "HasNextPage": "bool",
          "NextPage": "*string",
          "Timers": "[]Timer",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "TimerRunList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "HasNextPage": "bool",
          "NextPage": "*string",
          "Runs": "[]TimerRun",
          "Total": "int"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "TimerRun",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "EndTime": "*time.Time",
          "ID": "string",
          "Result": "*RunResult",
          "StartTime": "time.Time",
          "Status": "string",
          "TimerID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "RunResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Error": "*RunError",
          "RunID": "*string",
          "Status": "string",
          "StatusCode": "*int"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "RunError",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Code": "string",
          "Detail": "map[string]interface{}",
          "Message": "string"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "CreateTimerRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Callback": "Callback",
          "Data": "map[string]interface{}",
          "Name": "string",
          "Schedule": "Schedule"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "UpdateTimerRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Callback": "*Callback",
          "Data": "map[string]interface{}",
          "Name": "*string",
          "Schedule": "*Schedule"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "ListTimersOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CallbackType": "*string",
          "Limit": "*int",
          "Marker": "*string",
          "ScheduleType": "*string",
          "Status": "*string"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "ListRunsOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Limit": "*int",
          "Marker": "*string",
          "StartAfter": "*time.Time",
          "StartBefore": "*time.Time",
          "Status": "*string"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "CurrentUserInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Email": "string",
          "ID": "string",
          "Name": "*string",
          "Username": "string"
        },
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "TimerStatus",
      "type": "type",
      "details": {
        "kind": "alias",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "TimerStatusActive",
      "type": "const",
      "details": {
        "type": "TimerStatus",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "TimerStatusPaused",
      "type": "const",
      "details": {
        "type": "TimerStatus",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "TimerStatusExpired",
      "type": "const",
      "details": {
        "type": "TimerStatus",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "TimerStatusFailed",
      "type": "const",
      "details": {
        "type": "TimerStatus",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "TimerStatusComplete",
      "type": "const",
      "details": {
        "type": "TimerStatus",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "ScheduleType",
      "type": "type",
      "details": {
        "kind": "alias",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "ScheduleTypeOnce",
      "type": "const",
      "details": {
        "type": "ScheduleType",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "ScheduleTypeRecurring",
      "type": "const",
      "details": {
        "type": "ScheduleType",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "ScheduleTypeCron",
      "type": "const",
      "details": {
        "type": "ScheduleType",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "CallbackType",
      "type": "type",
      "details": {
        "kind": "alias",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "CallbackTypeFlow",
      "type": "const",
      "details": {
        "type": "CallbackType",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "CallbackTypeWeb",
      "type": "const",
      "details": {
        "type": "CallbackType",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "RunStatus",
      "type": "type",
      "details": {
        "kind": "alias",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "RunStatusPending",
      "type": "const",
      "details": {
        "type": "RunStatus",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "RunStatusInProgress",
      "type": "const",
      "details": {
        "type": "RunStatus",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "RunStatusSuccess",
      "type": "const",
      "details": {
        "type": "RunStatus",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "RunStatusFailure",
      "type": "const",
      "details": {
        "type": "RunStatus",
        "is_exported": true,
        "file": "pkg/services/timers/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "ClientOption",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/services/timers/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "WithAccessToken",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/timers/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "WithBaseURL",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/timers/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "WithAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "auth.Authorizer"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/timers/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "WithCoreOption",
      "type": "func",
      "details": {
        "params": [
          "core.ClientOption"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/timers/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "WithHTTPDebugging",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/timers/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/timers",
      "name": "WithHTTPTracing",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/timers/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "RefreshHandler",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "RefreshToken": {
            "params": [
              "context.Context",
              "string"
            ],
            "results": [
              "*auth.TokenResponse",
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/services/tokens/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "Manager",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "RefreshHandler": "RefreshHandler",
          "RefreshThreshold": "time.Duration",
          "Storage": "Storage"
        },
        "is_exported": true,
        "file": "pkg/services/tokens/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "NewManager",
      "type": "func",
      "details": {
        "params": [
          "...ClientOption"
        ],
        "results": [
          "*Manager",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/tokens/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "GetToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*Entry",
          "error"
        ],
        "receiver": "*Manager",
        "is_exported": true,
        "file": "pkg/services/tokens/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "StoreToken",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*Entry"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Manager",
        "is_exported": true,
        "file": "pkg/services/tokens/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "SetRefreshThreshold",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [],
        "receiver": "*Manager",
        "is_exported": true,
        "file": "pkg/services/tokens/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "StartBackgroundRefresh",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [
          "func"
        ],
        "receiver": "*Manager",
        "is_exported": true,
        "file": "pkg/services/tokens/manager.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "ClientOption",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/services/tokens/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "WithStorage",
      "type": "func",
      "details": {
        "params": [
          "Storage"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/tokens/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "WithRefreshHandler",
      "type": "func",
      "details": {
        "params": [
          "RefreshHandler"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/tokens/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "WithAuthClient",
      "type": "func",
      "details": {
        "params": [
          "*auth.Client"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/tokens/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "WithRefreshThreshold",
      "type": "func",
      "details": {
        "params": [
          "time.Duration"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/tokens/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "WithFileStorage",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "ClientOption"
        ],
        "is_exported": true,
        "file": "pkg/services/tokens/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "TokenSet",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AccessToken": "string",
          "ExpiresAt": "time.Time",
          "RefreshToken": "string",
          "ResourceID": "string",
          "Scope": "string"
        },
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "IsExpired",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*TokenSet",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "CanRefresh",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "bool"
        ],
        "receiver": "*TokenSet",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "Entry",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AccessToken": "string",
          "ExpiresAt": "time.Time",
          "RefreshToken": "string",
          "Resource": "string",
          "Scope": "string",
          "TokenSet": "*TokenSet"
        },
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "Storage",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "Delete": {
            "params": [
              "string"
            ],
            "results": [
              "error"
            ]
          },
          "List": {
            "params": [],
            "results": [
              "[]string",
              "error"
            ]
          },
          "Lookup": {
            "params": [
              "string"
            ],
            "results": [
              "*Entry",
              "error"
            ]
          },
          "Store": {
            "params": [
              "*Entry"
            ],
            "results": [
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "MemoryStorage",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "NewMemoryStorage",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*MemoryStorage"
        ],
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "Store",
      "type": "func",
      "details": {
        "params": [
          "*Entry"
        ],
        "results": [
          "error"
        ],
        "receiver": "*MemoryStorage",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "Lookup",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*Entry",
          "error"
        ],
        "receiver": "*MemoryStorage",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "Delete",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*MemoryStorage",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "List",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "[]string",
          "error"
        ],
        "receiver": "*MemoryStorage",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "FileStorage",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "NewFileStorage",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*FileStorage",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "Store",
      "type": "func",
      "details": {
        "params": [
          "*Entry"
        ],
        "results": [
          "error"
        ],
        "receiver": "*FileStorage",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "Lookup",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*Entry",
          "error"
        ],
        "receiver": "*FileStorage",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "Delete",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*FileStorage",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/tokens",
      "name": "List",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "[]string",
          "error"
        ],
        "receiver": "*FileStorage",
        "is_exported": true,
        "file": "pkg/services/tokens/tokens.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "CheckpointState",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CheckpointID": "string",
          "CompletedItems": "[]TransferItem",
          "CurrentTasks": "[]string",
          "FailedItems": "[]FailedTransferItem",
          "PendingItems": "[]TransferItem",
          "Stats": "struct{}",
          "TaskInfo": "struct{}",
          "TransferOptions": "ResumableTransferOptions"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/checkpoint.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "FailedTransferItem",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ErrorMessage": "string",
          "Item": "TransferItem",
          "LastAttempt": "time.Time",
          "RetryCount": "int"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/checkpoint.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ResumableTransferOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BatchSize": "int",
          "CheckpointInterval": "time.Duration",
          "DeleteDestinationExtra": "bool",
          "Encrypt": "bool",
          "MaxRetries": "int",
          "PreserveMtime": "bool",
          "ProgressCallback": "func",
          "RetryDelay": "time.Duration",
          "SyncLevel": "int",
          "VerifyChecksum": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/checkpoint.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "DefaultResumableTransferOptions",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*ResumableTransferOptions"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/checkpoint.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "CheckpointStorage",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "DeleteCheckpoint": {
            "params": [
              "context.Context",
              "string"
            ],
            "results": [
              "error"
            ]
          },
          "ListCheckpoints": {
            "params": [
              "context.Context"
            ],
            "results": [
              "[]string",
              "error"
            ]
          },
          "LoadCheckpoint": {
            "params": [
              "context.Context",
              "string"
            ],
            "results": [
              "*CheckpointState",
              "error"
            ]
          },
          "SaveCheckpoint": {
            "params": [
              "context.Context",
              "*CheckpointState"
            ],
            "results": [
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/services/transfer/checkpoint.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "FileCheckpointStorage",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Directory": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/checkpoint.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "NewFileCheckpointStorage",
      "type": "func",
      "details": {
        "params": [
          "string"
        ],
        "results": [
          "*FileCheckpointStorage",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/checkpoint.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "SaveCheckpoint",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*CheckpointState"
        ],
        "results": [
          "error"
        ],
        "receiver": "*FileCheckpointStorage",
        "is_exported": true,
        "file": "pkg/services/transfer/checkpoint.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "LoadCheckpoint",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*CheckpointState",
          "error"
        ],
        "receiver": "*FileCheckpointStorage",
        "is_exported": true,
        "file": "pkg/services/transfer/checkpoint.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ListCheckpoints",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "[]string",
          "error"
        ],
        "receiver": "*FileCheckpointStorage",
        "is_exported": true,
        "file": "pkg/services/transfer/checkpoint.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "DeleteCheckpoint",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*FileCheckpointStorage",
        "is_exported": true,
        "file": "pkg/services/transfer/checkpoint.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "DefaultBaseURL",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TransferScope",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "MinimumAPIVersion",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Client",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Client": "*core.Client"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "NewClient",
      "type": "func",
      "details": {
        "params": [
          "...Option"
        ],
        "results": [
          "*Client",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ListEndpoints",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListEndpointsOptions"
        ],
        "results": [
          "*EndpointList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetEndpoint",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*Endpoint",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ListDirectoryOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ContinueFrom": "string",
          "EndpointID": "string",
          "ExcludedTypes": "string",
          "Filter": "string",
          "Limit": "int",
          "Marker": "string",
          "OrderBy": "string",
          "Path": "string",
          "ShowHidden": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ListDirectory",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListDirectoryOptions"
        ],
        "results": [
          "*FileList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ListFiles",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "*ListFileOptions"
        ],
        "results": [
          "*FileList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetSubmissionID",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "CreateTransferTask",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*TransferTaskRequest"
        ],
        "results": [
          "*TaskResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "CreateDeleteTask",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*DeleteTaskRequest"
        ],
        "results": [
          "*TaskResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ListTasks",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*ListTasksOptions"
        ],
        "results": [
          "*TaskList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetTask",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*Task",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "CancelTask",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*OperationResult",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "CreateDirectoryOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "EndpointID": "string",
          "Path": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "CreateDirectory",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*CreateDirectoryOptions"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Mkdir",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Rename",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "SubmitTransfer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "string",
          "string",
          "string",
          "map[string]interface{}"
        ],
        "results": [
          "*TaskResponse",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "SubmitResumableTransfer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "string",
          "string",
          "*ResumableTransferOptions"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetResumableTransferStatus",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*CheckpointState",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ResumeResumableTransfer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*ResumableTransferOptions"
        ],
        "results": [
          "*ResumableTransferResult",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "CancelResumableTransfer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/client.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TestGetTask",
      "type": "func",
      "details": {
        "params": [
          "*testing.T"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/services/transfer/client_test_additions.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TestCancelTask",
      "type": "func",
      "details": {
        "params": [
          "*testing.T"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/services/transfer/client_test_additions.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TestListTasks",
      "type": "func",
      "details": {
        "params": [
          "*testing.T"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/services/transfer/client_test_additions.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TestErrorHandling",
      "type": "func",
      "details": {
        "params": [
          "*testing.T"
        ],
        "results": [],
        "is_exported": true,
        "file": "pkg/services/transfer/client_test_additions.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "SyncLevelProvider",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "GetSyncChecksum": {
            "params": [],
            "results": [
              "int"
            ]
          },
          "GetSyncLevelChecksum": {
            "params": [],
            "results": [
              "int"
            ]
          },
          "GetSyncLevelExists": {
            "params": [],
            "results": [
              "int"
            ]
          },
          "GetSyncLevelModified": {
            "params": [],
            "results": [
              "int"
            ]
          },
          "GetSyncLevelSize": {
            "params": [],
            "results": [
              "int"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/services/transfer/constants_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetSyncLevelExists",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*syncLevelProviderImpl",
        "is_exported": true,
        "file": "pkg/services/transfer/constants_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetSyncLevelSize",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*syncLevelProviderImpl",
        "is_exported": true,
        "file": "pkg/services/transfer/constants_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetSyncLevelModified",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*syncLevelProviderImpl",
        "is_exported": true,
        "file": "pkg/services/transfer/constants_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetSyncLevelChecksum",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*syncLevelProviderImpl",
        "is_exported": true,
        "file": "pkg/services/transfer/constants_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetSyncChecksum",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "int"
        ],
        "receiver": "*syncLevelProviderImpl",
        "is_exported": true,
        "file": "pkg/services/transfer/constants_interface.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeResourceNotFound",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodePermissionDenied",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeBadRequest",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeServiceUnavailable",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeRateLimitExceeded",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeAuthenticationRequired",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeServerError",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeTaskNotFound",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeTaskExpired",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeTaskCanceled",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeTaskCompleted",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeEndpointNotFound",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeEndpointNotActivated",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeEndpointError",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeFileNotFound",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeDirectoryNotFound",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeFileExists",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeNoSuchPath",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodeNotADirectory",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrCodePathCreationFailed",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrResourceNotFound",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrPermissionDenied",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrRateLimitExceeded",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrBadRequest",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrServerError",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrAuthenticationRequired",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrTaskNotFound",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrTaskExpired",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrTaskCanceled",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrTaskCompleted",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrEndpointNotFound",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrEndpointNotActivated",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrFileNotFound",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrDirectoryNotFound",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrFileExists",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrNoSuchPath",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ErrNotADirectory",
      "type": "var",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TransferError",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Code": "string",
          "Message": "string",
          "RequestID": "string",
          "Resource": "string",
          "StatusCode": "int"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "string"
        ],
        "receiver": "*TransferError",
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "IsResourceNotFound",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "IsPermissionDenied",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "IsRateLimitExceeded",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "IsAuthenticationRequired",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "IsEndpointNotActivated",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "IsTaskCompleted",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "IsRetryableTransferError",
      "type": "func",
      "details": {
        "params": [
          "error"
        ],
        "results": [
          "bool"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/errors.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "MemoryOptimizedOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BatchSize": "int",
          "Encrypt": "bool",
          "Label": "string",
          "MaxConcurrentTasks": "int",
          "MaxRetries": "int",
          "PreserveMtime": "bool",
          "ProgressCallback": "func",
          "ShowHidden": "bool",
          "SyncLevel": "int",
          "VerifyChecksum": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/memory_optimized.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "DefaultMemoryOptimizedOptions",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*MemoryOptimizedOptions"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/memory_optimized.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "MemoryOptimizedTransferResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BytesTransferred": "int64",
          "ElapsedTime": "time.Duration",
          "FailedFiles": "int",
          "FilesTransferred": "int",
          "TaskIDs": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/memory_optimized.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "SubmitMemoryOptimizedTransfer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "string",
          "string",
          "*MemoryOptimizedOptions"
        ],
        "results": [
          "*MemoryOptimizedTransferResult",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/memory_optimized.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ListMemoryOptimizedTaskStatus",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*MemoryOptimizedTransferResult"
        ],
        "results": [
          "[]Task",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/memory_optimized.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "SyncLevelExists",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "SyncLevelSize",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "SyncLevelModified",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "SyncLevelChecksum",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "SyncChecksum",
      "type": "const",
      "details": {
        "type": "",
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Endpoint",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Activated": "bool",
          "ActivationProfileID": "string",
          "ActivationRequirements": "map[string]interface{}",
          "CanonicalName": "string",
          "Collections": "[]Collection",
          "ContactEmail": "string",
          "ContactInfo": "string",
          "DeactivationTime": "*time.Time",
          "DefaultDirectory": "string",
          "Department": "string",
          "Description": "string",
          "DisplayName": "string",
          "Force": "bool",
          "GCPConnected": "bool",
          "GCPPaused": "bool",
          "HibernationState": "string",
          "HostEndpointID": "string",
          "ID": "string",
          "Keywords": "[]string",
          "LocalUserInfo": "*LocalUserInfo",
          "LocalUserInfoAvailable": "bool",
          "NetworkUse": "string",
          "OAuth": "bool",
          "Organization": "string",
          "OwnerID": "string",
          "OwnerString": "string",
          "Public": "bool",
          "Subscription": "interface{}"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "LocalUserInfo",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "GID": "int",
          "HomeDir": "string",
          "UID": "int",
          "Username": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Collection",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AdminReadACL": "bool",
          "AdminWriteACL": "bool",
          "BasePath": "string",
          "Description": "string",
          "ID": "string",
          "IdentitiesRead": "bool",
          "IdentitiesWrite": "bool",
          "Name": "string",
          "UserManageShares": "bool",
          "UserMessageOnly": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "EndpointList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Data": "[]Endpoint",
          "HasNextPage": "bool",
          "NextPageToken": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ListEndpointsOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FilterFullText": "string",
          "FilterHostEndpoint": "string",
          "FilterOwnerID": "string",
          "FilterScope": "string",
          "Limit": "int",
          "Offset": "int",
          "PageSize": "int",
          "PageToken": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Task",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "BytesSkipped": "int64",
          "BytesTransferred": "int64",
          "CancelTime": "*time.Time",
          "CompletionTime": "*time.Time",
          "CreatorID": "string",
          "DataType": "string",
          "Deadline": "*time.Time",
          "DeleteDestinationExtra": "bool",
          "DestEndpointDisplay": "string",
          "DestinationEndpointID": "string",
          "EncryptData": "bool",
          "FailOnQuotaErrors": "bool",
          "FatalErrorDetails": "map[string]interface{}",
          "FilesFixedPerms": "int",
          "FilesSkipped": "int",
          "FilesTransferred": "int",
          "FilesWithErrorPerms": "int",
          "HistoryDeleted": "bool",
          "Label": "string",
          "OwnerID": "string",
          "PerfOerationID": "string",
          "PreserveMtime": "bool",
          "PublicationID": "string",
          "Recursive": "bool",
          "RequestTime": "time.Time",
          "SkipSourceErrors": "bool",
          "SourceEndpointDisplay": "string",
          "SourceEndpointID": "string",
          "Status": "string",
          "Subtasks": "int",
          "SubtasksCanceled": "int",
          "SubtasksExpired": "int",
          "SubtasksFailed": "int",
          "SubtasksPending": "int",
          "SubtasksSucceeded": "int",
          "SymlinkDepth": "int",
          "SyncLevel": "int",
          "TaskID": "string",
          "Type": "string",
          "UseSharing": "bool",
          "UserMessage": "string",
          "VerifyChecksum": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TaskList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Data": "[]Task",
          "HasNextPage": "bool",
          "NextMarker": "string",
          "NextPageToken": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ListTasksOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FilterCompletedSince": "time.Time",
          "FilterCompletedUntil": "time.Time",
          "FilterRequestedSince": "time.Time",
          "FilterRequestedUntil": "time.Time",
          "FilterStatus": "string",
          "FilterTaskID": "string",
          "FilterType": "string",
          "Limit": "int",
          "Offset": "int",
          "PageSize": "int",
          "PageToken": "string",
          "Status": "string",
          "TaskType": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TransferItem",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Checksum": "string",
          "DataType": "string",
          "DestinationPath": "string",
          "Recursive": "bool",
          "SourcePath": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "DeleteItem",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DataType": "string",
          "Path": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TransferTaskRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DataType": "string",
          "Deadline": "*time.Time",
          "DeleteDestinationExtra": "bool",
          "DestinationEndpointID": "string",
          "Encrypt": "bool",
          "FailOnQuotaErrors": "bool",
          "Items": "[]TransferItem",
          "Label": "string",
          "NotifyOnFailed": "bool",
          "NotifyOnInactive": "bool",
          "NotifyOnSucceeded": "bool",
          "PreserveMtime": "bool",
          "SkipSourceErrors": "bool",
          "SourceEndpointID": "string",
          "SubmissionID": "string",
          "SymlinkDepth": "int",
          "SyncLevel": "int",
          "UseSharing": "bool",
          "VerifyChecksum": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "DeleteTaskRequest",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DataType": "string",
          "Deadline": "*time.Time",
          "EndpointID": "string",
          "Items": "[]DeleteItem",
          "Label": "string",
          "NotifyOnFailed": "bool",
          "NotifyOnInactive": "bool",
          "NotifyOnSucceeded": "bool",
          "SubmissionID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TaskResponse",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Code": "string",
          "Message": "string",
          "OAuthURL": "string",
          "SubmissionID": "string",
          "TaskID": "string",
          "TransferDetails": "interface{}"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "OperationResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Code": "string",
          "Details": "interface{}",
          "Message": "string",
          "RequestID": "string",
          "Resource": "string",
          "TaskID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "FileListItem",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DataType": "string",
          "Group": "string",
          "LastModified": "string",
          "Link": "string",
          "Name": "string",
          "Permissions": "string",
          "Size": "int64",
          "Type": "string",
          "User": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "FileList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "AbsolutePath": "string",
          "ConstantTasks": "[]string",
          "ContinueFrom": "string",
          "Data": "[]FileListItem",
          "EndpointID": "string",
          "HasNextPage": "bool",
          "Marker": "string",
          "MaybeSharing": "bool",
          "Path": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ListFileOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "ContinueFrom": "string",
          "ExcludedTypes": "string",
          "Filter": "string",
          "Limit": "int",
          "Marker": "string",
          "OrderBy": "string",
          "ShowHidden": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "MarshalJSONTime",
      "type": "func",
      "details": {
        "params": [
          "time.Time"
        ],
        "results": [
          "[]byte",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/models.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ClientConfig",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/transfer/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Option",
      "type": "type",
      "details": {
        "kind": "FuncType",
        "is_exported": true,
        "file": "pkg/services/transfer/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "WithAuthorizer",
      "type": "func",
      "details": {
        "params": [
          "auth.Authorizer"
        ],
        "results": [
          "Option"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "WithHTTPDebugging",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "Option"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "WithHTTPTracing",
      "type": "func",
      "details": {
        "params": [
          "bool"
        ],
        "results": [
          "Option"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "WithLogger",
      "type": "func",
      "details": {
        "params": [
          "interfaces.Logger"
        ],
        "results": [
          "Option"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "WithCoreOption",
      "type": "func",
      "details": {
        "params": [
          "core.ClientOption"
        ],
        "results": [
          "Option"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/options.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "RecursiveTransferOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DeleteDestinationExtra": "bool",
          "EncryptData": "bool",
          "Label": "string",
          "MaxConcurrentListings": "int",
          "MaxConcurrentTransfers": "int",
          "PreserveTimestamp": "bool",
          "ProgressCallback": "func",
          "Recursive": "bool",
          "SkipDirSizes": "bool",
          "Sync": "bool",
          "VerifyChecksum": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/recursive.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "DefaultRecursiveTransferOptions",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*RecursiveTransferOptions"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/recursive.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "RecursiveTransferResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Directories": "int",
          "EndTime": "time.Time",
          "FailedFiles": "int",
          "StartTime": "time.Time",
          "Subdirectories": "int",
          "TaskID": "string",
          "TotalFiles": "int64",
          "TotalSize": "int64"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/recursive.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "SubmitRecursiveTransfer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "string",
          "string",
          "*RecursiveTransferOptions"
        ],
        "results": [
          "*RecursiveTransferResult",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/recursive.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ResumableTransferResult",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "CheckpointID": "string",
          "Completed": "bool",
          "CompletedItems": "int",
          "Duration": "time.Duration",
          "FailedItems": "int",
          "RemainingItems": "int",
          "State": "*CheckpointState",
          "TaskIDs": "[]string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/resumable.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "CreateResumableTransfer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "string",
          "string",
          "string",
          "*ResumableTransferOptions"
        ],
        "results": [
          "string",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/resumable.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ResumeTransfer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*ResumableTransferOptions"
        ],
        "results": [
          "*ResumableTransferResult",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/resumable.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetTransferCheckpoint",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "*CheckpointState",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/resumable.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "ListTransferCheckpoints",
      "type": "func",
      "details": {
        "params": [
          "context.Context"
        ],
        "results": [
          "[]string",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/resumable.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "DeleteTransferCheckpoint",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/resumable.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "FileIterator",
      "type": "type",
      "details": {
        "kind": "interface",
        "methods": {
          "Close": {
            "params": [],
            "results": [
              "error"
            ]
          },
          "Error": {
            "params": [],
            "results": [
              "error"
            ]
          },
          "Next": {
            "params": [],
            "results": [
              "FileListItem",
              "bool"
            ]
          },
          "Reset": {
            "params": [],
            "results": [
              "error"
            ]
          }
        },
        "is_exported": true,
        "file": "pkg/services/transfer/streaming_iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "StreamingFileIterator",
      "type": "type",
      "details": {
        "kind": "struct",
        "is_exported": true,
        "file": "pkg/services/transfer/streaming_iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "NewStreamingFileIterator",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*Client",
          "string",
          "string",
          "*StreamingIteratorOptions"
        ],
        "results": [
          "*StreamingFileIterator",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/streaming_iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "StreamingIteratorOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Concurrency": "int",
          "MaxDepth": "int",
          "Recursive": "bool",
          "ShowHidden": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/streaming_iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Next",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "FileListItem",
          "bool"
        ],
        "receiver": "*StreamingFileIterator",
        "is_exported": true,
        "file": "pkg/services/transfer/streaming_iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Error",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "error"
        ],
        "receiver": "*StreamingFileIterator",
        "is_exported": true,
        "file": "pkg/services/transfer/streaming_iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Reset",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "error"
        ],
        "receiver": "*StreamingFileIterator",
        "is_exported": true,
        "file": "pkg/services/transfer/streaming_iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "Close",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "error"
        ],
        "receiver": "*StreamingFileIterator",
        "is_exported": true,
        "file": "pkg/services/transfer/streaming_iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "CollectFiles",
      "type": "func",
      "details": {
        "params": [
          "FileIterator"
        ],
        "results": [
          "[]FileListItem",
          "error"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/streaming_iterator.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "AddAuthToRequest",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*http.Request"
        ],
        "results": [
          "error"
        ],
        "receiver": "*testAuthorizer2",
        "is_exported": true,
        "file": "pkg/services/transfer/test_authorizer.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TestCreateDirectoryOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "EndpointID": "string",
          "Path": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TestCreateDirectory",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*TestCreateDirectoryOptions"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "DeleteItemOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "EndpointID": "string",
          "Path": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "DeleteItem",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*DeleteItemOptions"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TestListDirectoryOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "EndpointID": "string",
          "Limit": "int",
          "Marker": "string",
          "OrderBy": "string",
          "Path": "string",
          "ShowHidden": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TestListDirectory",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*TestListDirectoryOptions"
        ],
        "results": [
          "*FileList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "RenameItemOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "EndpointID": "string",
          "NewPath": "string",
          "OldPath": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "RenameItem",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*RenameItemOptions"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetTaskEventsOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "FilterCode": "string",
          "Limit": "int",
          "Offset": "int"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "GetTaskEvents",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "*GetTaskEventsOptions"
        ],
        "results": [
          "*TaskEventList",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TaskEventList",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Data": "[]TaskEvent"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TaskEvent",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Code": "string",
          "Description": "string",
          "Details": "string",
          "Time": "time.Time"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "UpdateTaskLabelOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "Label": "string",
          "TaskID": "string"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "UpdateTaskLabel",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*UpdateTaskLabelOptions"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "WaitForTaskCompletion",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "string",
          "time.Duration"
        ],
        "results": [
          "*Task",
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TestRecursiveTransferOptions",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "DestinationEndpointID": "string",
          "DestinationPath": "string",
          "Label": "string",
          "SourceEndpointID": "string",
          "SourcePath": "string",
          "Sync": "bool",
          "VerifyChecksum": "bool"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer",
      "name": "TestRecursiveTransfer",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*TestRecursiveTransferOptions"
        ],
        "results": [
          "error"
        ],
        "receiver": "*Client",
        "is_exported": true,
        "file": "pkg/services/transfer/test_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer/testutils",
      "name": "MemoryTracker",
      "type": "type",
      "details": {
        "kind": "struct",
        "fields": {
          "MaxUsage": "uint64"
        },
        "is_exported": true,
        "file": "pkg/services/transfer/testutils/memory_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer/testutils",
      "name": "NewMemoryTracker",
      "type": "func",
      "details": {
        "params": [],
        "results": [
          "*MemoryTracker"
        ],
        "is_exported": true,
        "file": "pkg/services/transfer/testutils/memory_helpers.go",
        "is_deprecated": false
      }
    },
    {
      "package": "services/transfer/testutils",
      "name": "TrackMemoryUsage",
      "type": "func",
      "details": {
        "params": [
          "context.Context",
          "*testing.T",
          "int"
        ],
        "results": [],
        "receiver": "*MemoryTracker",
        "is_exported": true,
        "file": "pkg/services/transfer/testutils/memory_helpers.go",
        "is_deprecated": false
      }
    }
  ]
}